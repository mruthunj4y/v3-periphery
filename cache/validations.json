{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/math/SafeMath.sol:18",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/math/SignedSafeMath.sol:SignedSafeMath": {
        "src": "@openzeppelin/contracts/math/SignedSafeMath.sol:9",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:8",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/IPool.sol:IPool": {
        "src": "@surge/surge-core/contracts/interfaces/IPool.sol:15",
        "inherit": [
          "@surge/surge-core/contracts/interfaces/pool/IPoolEvents.sol:IPoolEvents",
          "@surge/surge-core/contracts/interfaces/pool/IPoolOwnerActions.sol:IPoolOwnerActions",
          "@surge/surge-core/contracts/interfaces/pool/IPoolActions.sol:IPoolActions",
          "@surge/surge-core/contracts/interfaces/pool/IPoolDerivedState.sol:IPoolDerivedState",
          "@surge/surge-core/contracts/interfaces/pool/IPoolState.sol:IPoolState",
          "@surge/surge-core/contracts/interfaces/pool/IPoolImmutables.sol:IPoolImmutables"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolActions.sol:IPoolActions": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(uint160)",
          "mint(address,int24,int24,uint128,bytes)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "swap(address,bool,int256,uint160,bytes)",
          "flash(address,uint256,uint256,bytes)",
          "increaseObservationCardinalityNext(uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolDerivedState.sol:IPoolDerivedState": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolDerivedState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "observe(uint32[])",
          "snapshotCumulativesInside(int24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolEvents.sol:IPoolEvents": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolImmutables.sol:IPoolImmutables": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolImmutables.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "token0()",
          "token1()",
          "fee()",
          "tickSpacing()",
          "maxLiquidityPerTick()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolOwnerActions.sol:IPoolOwnerActions": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolOwnerActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setFeeProtocol(uint8,uint8)",
          "collectProtocol(address,uint128,uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolState.sol:IPoolState": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "slot0()",
          "feeGrowthGlobal0X128()",
          "feeGrowthGlobal1X128()",
          "protocolFees()",
          "liquidity()",
          "ticks(int24)",
          "tickBitmap(int16)",
          "positions(bytes32)",
          "observations(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/libraries/BitMath.sol:BitMath": {
        "src": "@surge/surge-core/contracts/libraries/BitMath.sol:6",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/libraries/FullMath.sol:FullMath": {
        "src": "@surge/surge-core/contracts/libraries/FullMath.sol:7",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/libraries/TickMath.sol:TickMath": {
        "src": "@surge/surge-core/contracts/libraries/TickMath.sol:7",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "base64-sol/base64.sol:Base64": {
        "src": "base64-sol/base64.sol:6",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/HexStrings.sol:HexStrings": {
        "src": "contracts/libraries/HexStrings.sol:4",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/NFTDescriptor.sol:NFTDescriptor": {
        "src": "contracts/libraries/NFTDescriptor.sol:16",
        "version": {
          "withMetadata": "e0a21def0617a2c9ba880da3781fbbcace69418c23d62636f05c059933b579b8",
          "withoutMetadata": "e631add209b32c77ffe7a17eb8aa8e54d9cc63fb8ca26726d96c4bfe29b3d152",
          "linkedWithoutMetadata": "e631add209b32c77ffe7a17eb8aa8e54d9cc63fb8ca26726d96c4bfe29b3d152"
        },
        "inherit": [],
        "libraries": [
          "@surge/surge-core/contracts/libraries/TickMath.sol:TickMath",
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@openzeppelin/contracts/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/math/SignedSafeMath.sol:SignedSafeMath",
          "contracts/libraries/HexStrings.sol:HexStrings",
          "base64-sol/base64.sol:Base64",
          "@surge/surge-core/contracts/libraries/FullMath.sol:FullMath",
          "contracts/libraries/NFTSVG.sol:NFTSVG"
        ],
        "methods": [
          "constructTokenURI((uint256,address,address,string,string,uint8,uint8,bool,int24,int24,int24,int24,uint24,address))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/NFTSVG.sol:NFTSVG": {
        "src": "contracts/libraries/NFTSVG.sol:10",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "base64-sol/base64.sol:Base64",
          "@surge/surge-core/contracts/libraries/BitMath.sol:BitMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/NFTDescriptorTest.sol:NFTDescriptorTest": {
        "src": "contracts/test/NFTDescriptorTest.sol:9",
        "version": {
          "withMetadata": "16b64596c2566d1d3e97051a22a3e674baf14a747991c585a5ba4db648704ad4",
          "withoutMetadata": "439134b333570a293417fd45b1448f6f5cbb4acf9f0948888166e30793ca5f16",
          "linkedWithoutMetadata": "439134b333570a293417fd45b1448f6f5cbb4acf9f0948888166e30793ca5f16"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/HexStrings.sol:HexStrings",
          "contracts/libraries/NFTDescriptor.sol:NFTDescriptor",
          "contracts/libraries/NFTSVG.sol:NFTSVG"
        ],
        "methods": [
          "constructTokenURI((uint256,address,address,string,string,uint8,uint8,bool,int24,int24,int24,int24,uint24,address))",
          "getGasCostOfConstructTokenURI((uint256,address,address,string,string,uint8,uint8,bool,int24,int24,int24,int24,uint24,address))",
          "tickToDecimalString(int24,int24,uint8,uint8,bool)",
          "fixedPointToDecimalString(uint160,uint8,uint8)",
          "feeToPercentString(uint24)",
          "addressToString(address)",
          "generateSVGImage((uint256,address,address,string,string,uint8,uint8,bool,int24,int24,int24,int24,uint24,address))",
          "tokenToColorHex(address,uint256)",
          "sliceTokenHex(address,uint256)",
          "rangeLocation(int24,int24)",
          "isRare(uint256,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/NFTDescriptor.sol",
            "name": "NFTDescriptor",
            "length": 20,
            "start": 573,
            "placeholder": "__$cea9be979eee3d87fb124d6cbb244bb0b5$__"
          },
          {
            "src": "contracts/libraries/NFTDescriptor.sol",
            "name": "NFTDescriptor",
            "length": 20,
            "start": 830,
            "placeholder": "__$cea9be979eee3d87fb124d6cbb244bb0b5$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "NFTDescriptor",
            "src": "contracts/libraries/NFTDescriptor.sol"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      }
    },
    {
      "@openzeppelin/contracts/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/math/SafeMath.sol:18",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/math/SignedSafeMath.sol:SignedSafeMath": {
        "src": "@openzeppelin/contracts/math/SignedSafeMath.sol:9",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:8",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/IPool.sol:IPool": {
        "src": "@surge/surge-core/contracts/interfaces/IPool.sol:15",
        "inherit": [
          "@surge/surge-core/contracts/interfaces/pool/IPoolEvents.sol:IPoolEvents",
          "@surge/surge-core/contracts/interfaces/pool/IPoolOwnerActions.sol:IPoolOwnerActions",
          "@surge/surge-core/contracts/interfaces/pool/IPoolActions.sol:IPoolActions",
          "@surge/surge-core/contracts/interfaces/pool/IPoolDerivedState.sol:IPoolDerivedState",
          "@surge/surge-core/contracts/interfaces/pool/IPoolState.sol:IPoolState",
          "@surge/surge-core/contracts/interfaces/pool/IPoolImmutables.sol:IPoolImmutables"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolActions.sol:IPoolActions": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(uint160)",
          "mint(address,int24,int24,uint128,bytes)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "swap(address,bool,int256,uint160,bytes)",
          "flash(address,uint256,uint256,bytes)",
          "increaseObservationCardinalityNext(uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolDerivedState.sol:IPoolDerivedState": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolDerivedState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "observe(uint32[])",
          "snapshotCumulativesInside(int24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolEvents.sol:IPoolEvents": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolImmutables.sol:IPoolImmutables": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolImmutables.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "token0()",
          "token1()",
          "fee()",
          "tickSpacing()",
          "maxLiquidityPerTick()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolOwnerActions.sol:IPoolOwnerActions": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolOwnerActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setFeeProtocol(uint8,uint8)",
          "collectProtocol(address,uint128,uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolState.sol:IPoolState": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "slot0()",
          "feeGrowthGlobal0X128()",
          "feeGrowthGlobal1X128()",
          "protocolFees()",
          "liquidity()",
          "ticks(int24)",
          "tickBitmap(int16)",
          "positions(bytes32)",
          "observations(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/libraries/BitMath.sol:BitMath": {
        "src": "@surge/surge-core/contracts/libraries/BitMath.sol:6",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/libraries/FullMath.sol:FullMath": {
        "src": "@surge/surge-core/contracts/libraries/FullMath.sol:7",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/libraries/TickMath.sol:TickMath": {
        "src": "@surge/surge-core/contracts/libraries/TickMath.sol:7",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "base64-sol/base64.sol:Base64": {
        "src": "base64-sol/base64.sol:6",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/HexStrings.sol:HexStrings": {
        "src": "contracts/libraries/HexStrings.sol:4",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/NFTDescriptor.sol:NFTDescriptor": {
        "src": "contracts/libraries/NFTDescriptor.sol:16",
        "version": {
          "withMetadata": "e0a21def0617a2c9ba880da3781fbbcace69418c23d62636f05c059933b579b8",
          "withoutMetadata": "e631add209b32c77ffe7a17eb8aa8e54d9cc63fb8ca26726d96c4bfe29b3d152",
          "linkedWithoutMetadata": "e631add209b32c77ffe7a17eb8aa8e54d9cc63fb8ca26726d96c4bfe29b3d152"
        },
        "inherit": [],
        "libraries": [
          "@surge/surge-core/contracts/libraries/TickMath.sol:TickMath",
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@openzeppelin/contracts/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/math/SignedSafeMath.sol:SignedSafeMath",
          "contracts/libraries/HexStrings.sol:HexStrings",
          "base64-sol/base64.sol:Base64",
          "@surge/surge-core/contracts/libraries/FullMath.sol:FullMath",
          "contracts/libraries/NFTSVG.sol:NFTSVG"
        ],
        "methods": [
          "constructTokenURI((uint256,address,address,string,string,uint8,uint8,bool,int24,int24,int24,int24,uint24,address))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/NFTSVG.sol:NFTSVG": {
        "src": "contracts/libraries/NFTSVG.sol:10",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "base64-sol/base64.sol:Base64",
          "@surge/surge-core/contracts/libraries/BitMath.sol:BitMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:20",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:11",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:11",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:10",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/math/SafeMath.sol:18",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/math/SignedSafeMath.sol:SignedSafeMath": {
        "src": "@openzeppelin/contracts/math/SignedSafeMath.sol:9",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:8",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/IFactory.sol:IFactory": {
        "src": "@surge/surge-core/contracts/interfaces/IFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "feeAmountTickSpacing(uint24)",
          "getPool(address,address,uint24)",
          "createPool(address,address,uint24)",
          "setOwner(address)",
          "enableFeeAmount(uint24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/IPool.sol:IPool": {
        "src": "@surge/surge-core/contracts/interfaces/IPool.sol:15",
        "inherit": [
          "@surge/surge-core/contracts/interfaces/pool/IPoolEvents.sol:IPoolEvents",
          "@surge/surge-core/contracts/interfaces/pool/IPoolOwnerActions.sol:IPoolOwnerActions",
          "@surge/surge-core/contracts/interfaces/pool/IPoolActions.sol:IPoolActions",
          "@surge/surge-core/contracts/interfaces/pool/IPoolDerivedState.sol:IPoolDerivedState",
          "@surge/surge-core/contracts/interfaces/pool/IPoolState.sol:IPoolState",
          "@surge/surge-core/contracts/interfaces/pool/IPoolImmutables.sol:IPoolImmutables"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolActions.sol:IPoolActions": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(uint160)",
          "mint(address,int24,int24,uint128,bytes)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "swap(address,bool,int256,uint160,bytes)",
          "flash(address,uint256,uint256,bytes)",
          "increaseObservationCardinalityNext(uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolDerivedState.sol:IPoolDerivedState": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolDerivedState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "observe(uint32[])",
          "snapshotCumulativesInside(int24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolEvents.sol:IPoolEvents": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolImmutables.sol:IPoolImmutables": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolImmutables.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "token0()",
          "token1()",
          "fee()",
          "tickSpacing()",
          "maxLiquidityPerTick()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolOwnerActions.sol:IPoolOwnerActions": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolOwnerActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setFeeProtocol(uint8,uint8)",
          "collectProtocol(address,uint128,uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolState.sol:IPoolState": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "slot0()",
          "feeGrowthGlobal0X128()",
          "feeGrowthGlobal1X128()",
          "protocolFees()",
          "liquidity()",
          "ticks(int24)",
          "tickBitmap(int16)",
          "positions(bytes32)",
          "observations(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/libraries/BitMath.sol:BitMath": {
        "src": "@surge/surge-core/contracts/libraries/BitMath.sol:6",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/libraries/FullMath.sol:FullMath": {
        "src": "@surge/surge-core/contracts/libraries/FullMath.sol:7",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/libraries/TickMath.sol:TickMath": {
        "src": "@surge/surge-core/contracts/libraries/TickMath.sol:7",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "base64-sol/base64.sol:Base64": {
        "src": "base64-sol/base64.sol:6",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/NonfungibleTokenPositionDescriptor.sol:NonfungibleTokenPositionDescriptor": {
        "src": "contracts/NonfungibleTokenPositionDescriptor.sol:20",
        "version": {
          "withMetadata": "3b2f083a710c8ae5e03c7d20d04f8b165bc2acc4929c2f20bc099323ea4a64e0",
          "withoutMetadata": "f41a755e9923a087d57e360ba64e1afbc7442617143d1636fa7dc86b6149db4c",
          "linkedWithoutMetadata": "f41a755e9923a087d57e360ba64e1afbc7442617143d1636fa7dc86b6149db4c"
        },
        "inherit": [
          "contracts/interfaces/INonfungibleTokenPositionDescriptor.sol:INonfungibleTokenPositionDescriptor",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libraries/NFTDescriptor.sol:NFTDescriptor",
          "contracts/libraries/PoolAddress.sol:PoolAddress",
          "contracts/libraries/ChainId.sol:ChainId",
          "contracts/libraries/TokenRatioSortOrder.sol:TokenRatioSortOrder",
          "contracts/libraries/SafeERC20Namer.sol:SafeERC20Namer"
        ],
        "methods": [
          "initialize(address,bytes32)",
          "nativeCurrencyLabel()",
          "tokenURI(address,uint256)",
          "flipRatio(address,address,uint256)",
          "tokenRatioPriority(address,uint256)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/NFTDescriptor.sol",
            "name": "NFTDescriptor",
            "length": 20,
            "start": 1595,
            "placeholder": "__$cea9be979eee3d87fb124d6cbb244bb0b5$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "NFTDescriptor",
            "src": "contracts/libraries/NFTDescriptor.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "WETH9",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "NonfungibleTokenPositionDescriptor",
              "src": "contracts/NonfungibleTokenPositionDescriptor.sol:27"
            },
            {
              "label": "nativeCurrencyLabelBytes",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "NonfungibleTokenPositionDescriptor",
              "src": "contracts/NonfungibleTokenPositionDescriptor.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IERC20Metadata.sol:IERC20Metadata": {
        "src": "contracts/interfaces/IERC20Metadata.sol:9",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IERC721Permit.sol:IERC721Permit": {
        "src": "contracts/interfaces/IERC721Permit.sol:8",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "PERMIT_TYPEHASH()",
          "DOMAIN_SEPARATOR()",
          "permit(address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/INonfungiblePositionManager.sol:INonfungiblePositionManager": {
        "src": "contracts/interfaces/INonfungiblePositionManager.sol:16",
        "inherit": [
          "contracts/interfaces/IERC721Permit.sol:IERC721Permit",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "contracts/interfaces/IPeripheryImmutableState.sol:IPeripheryImmutableState",
          "contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments",
          "contracts/interfaces/IPoolInitializer.sol:IPoolInitializer"
        ],
        "libraries": [],
        "methods": [
          "positions(uint256)",
          "mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))",
          "increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))",
          "decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))",
          "collect((uint256,address,uint128,uint128))",
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/INonfungibleTokenPositionDescriptor.sol:INonfungibleTokenPositionDescriptor": {
        "src": "contracts/interfaces/INonfungibleTokenPositionDescriptor.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenURI(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IPeripheryImmutableState.sol:IPeripheryImmutableState": {
        "src": "contracts/interfaces/IPeripheryImmutableState.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH9()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments": {
        "src": "contracts/interfaces/IPeripheryPayments.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "unwrapWETH9(uint256,address)",
          "refundETH()",
          "sweepToken(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IPoolInitializer.sol:IPoolInitializer": {
        "src": "contracts/interfaces/IPoolInitializer.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createAndInitializePoolIfNecessary(address,address,uint24,uint160)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/AddressStringUtil.sol:AddressStringUtil": {
        "src": "contracts/libraries/AddressStringUtil.sol:4",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/ChainId.sol:ChainId": {
        "src": "contracts/libraries/ChainId.sol:5",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/HexStrings.sol:HexStrings": {
        "src": "contracts/libraries/HexStrings.sol:4",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/NFTDescriptor.sol:NFTDescriptor": {
        "src": "contracts/libraries/NFTDescriptor.sol:16",
        "version": {
          "withMetadata": "e0a21def0617a2c9ba880da3781fbbcace69418c23d62636f05c059933b579b8",
          "withoutMetadata": "e631add209b32c77ffe7a17eb8aa8e54d9cc63fb8ca26726d96c4bfe29b3d152",
          "linkedWithoutMetadata": "e631add209b32c77ffe7a17eb8aa8e54d9cc63fb8ca26726d96c4bfe29b3d152"
        },
        "inherit": [],
        "libraries": [
          "@surge/surge-core/contracts/libraries/TickMath.sol:TickMath",
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@openzeppelin/contracts/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/math/SignedSafeMath.sol:SignedSafeMath",
          "contracts/libraries/HexStrings.sol:HexStrings",
          "base64-sol/base64.sol:Base64",
          "@surge/surge-core/contracts/libraries/FullMath.sol:FullMath",
          "contracts/libraries/NFTSVG.sol:NFTSVG"
        ],
        "methods": [
          "constructTokenURI((uint256,address,address,string,string,uint8,uint8,bool,int24,int24,int24,int24,uint24,address))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/NFTSVG.sol:NFTSVG": {
        "src": "contracts/libraries/NFTSVG.sol:10",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "base64-sol/base64.sol:Base64",
          "@surge/surge-core/contracts/libraries/BitMath.sol:BitMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/PoolAddress.sol:PoolAddress": {
        "src": "contracts/libraries/PoolAddress.sol:7",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/SafeERC20Namer.sol:SafeERC20Namer": {
        "src": "contracts/libraries/SafeERC20Namer.sol:8",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/AddressStringUtil.sol:AddressStringUtil"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/TokenRatioSortOrder.sol:TokenRatioSortOrder": {
        "src": "contracts/libraries/TokenRatioSortOrder.sol:4",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:14",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol:SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol:18",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:20",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:22",
        "version": {
          "withMetadata": "30a1430c38ef554db3378f9b58aefe7944bcc8602be235f33d07fac941985304",
          "withoutMetadata": "5fffbdf9f691b23b94f16f0ae221e27af0cc297ba8bc1848ab55bedf3dfb612a",
          "linkedWithoutMetadata": "5fffbdf9f691b23b94f16f0ae221e27af0cc297ba8bc1848ab55bedf3dfb612a"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol:SafeMathUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol:EnumerableSetUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/EnumerableMapUpgradeable.sol:EnumerableMapUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable"
        ],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "baseURI()",
          "tokenOfOwnerByIndex(address,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "incorrect-initializer-order",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:96",
            "expectedLinearization": [
              "ContextUpgradeable",
              "ERC165Upgradeable"
            ],
            "foundOrder": [
              "ERC165Upgradeable"
            ]
          },
          {
            "kind": "missing-initializer-call",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:94",
            "parentContracts": [
              "ContextUpgradeable"
            ]
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_holderTokens",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_struct(UintSet)2919_storage)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenOwners",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(UintToAddressMap)2296_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
            },
            {
              "label": "_baseURI",
              "offset": 0,
              "slot": "109",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "110",
              "type": "t_array(t_uint256)41_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(MapEntry)1970_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]",
              "numberOfBytes": "1312"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintSet)2919_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Map)1978_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)1970_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(MapEntry)1970_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2533_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintSet)2919_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2533_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintToAddressMap)2296_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)1978_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:11",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:11",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:10",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/utils/EnumerableMapUpgradeable.sol:EnumerableMapUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/EnumerableMapUpgradeable.sol:29",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol:EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol:29",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:8",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/drafts/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/drafts/IERC20Permit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/IFactory.sol:IFactory": {
        "src": "@surge/surge-core/contracts/interfaces/IFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "feeAmountTickSpacing(uint24)",
          "getPool(address,address,uint24)",
          "createPool(address,address,uint24)",
          "setOwner(address)",
          "enableFeeAmount(uint24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/IPool.sol:IPool": {
        "src": "@surge/surge-core/contracts/interfaces/IPool.sol:15",
        "inherit": [
          "@surge/surge-core/contracts/interfaces/pool/IPoolEvents.sol:IPoolEvents",
          "@surge/surge-core/contracts/interfaces/pool/IPoolOwnerActions.sol:IPoolOwnerActions",
          "@surge/surge-core/contracts/interfaces/pool/IPoolActions.sol:IPoolActions",
          "@surge/surge-core/contracts/interfaces/pool/IPoolDerivedState.sol:IPoolDerivedState",
          "@surge/surge-core/contracts/interfaces/pool/IPoolState.sol:IPoolState",
          "@surge/surge-core/contracts/interfaces/pool/IPoolImmutables.sol:IPoolImmutables"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/callback/IMintCallback.sol:IMintCallback": {
        "src": "@surge/surge-core/contracts/interfaces/callback/IMintCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mintCallback(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolActions.sol:IPoolActions": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(uint160)",
          "mint(address,int24,int24,uint128,bytes)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "swap(address,bool,int256,uint160,bytes)",
          "flash(address,uint256,uint256,bytes)",
          "increaseObservationCardinalityNext(uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolDerivedState.sol:IPoolDerivedState": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolDerivedState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "observe(uint32[])",
          "snapshotCumulativesInside(int24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolEvents.sol:IPoolEvents": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolImmutables.sol:IPoolImmutables": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolImmutables.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "token0()",
          "token1()",
          "fee()",
          "tickSpacing()",
          "maxLiquidityPerTick()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolOwnerActions.sol:IPoolOwnerActions": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolOwnerActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setFeeProtocol(uint8,uint8)",
          "collectProtocol(address,uint128,uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolState.sol:IPoolState": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "slot0()",
          "feeGrowthGlobal0X128()",
          "feeGrowthGlobal1X128()",
          "protocolFees()",
          "liquidity()",
          "ticks(int24)",
          "tickBitmap(int16)",
          "positions(bytes32)",
          "observations(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/libraries/FixedPoint128.sol:FixedPoint128": {
        "src": "@surge/surge-core/contracts/libraries/FixedPoint128.sol:6",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/libraries/FixedPoint96.sol:FixedPoint96": {
        "src": "@surge/surge-core/contracts/libraries/FixedPoint96.sol:7",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/libraries/FullMath.sol:FullMath": {
        "src": "@surge/surge-core/contracts/libraries/FullMath.sol:7",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/libraries/TickMath.sol:TickMath": {
        "src": "@surge/surge-core/contracts/libraries/TickMath.sol:7",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/NonfungiblePositionManager.sol:NonfungiblePositionManager": {
        "src": "contracts/NonfungiblePositionManager.sol:24",
        "version": {
          "withMetadata": "42bb48e78e573c6e1f40573b23b9accc6fae81c4c59cb48d54a208e4ec420816",
          "withoutMetadata": "31edd1d9c305d2e422cd83b60f4a8baa50f5eca8a36b417362a1630a6136f95e",
          "linkedWithoutMetadata": "31edd1d9c305d2e422cd83b60f4a8baa50f5eca8a36b417362a1630a6136f95e"
        },
        "inherit": [
          "contracts/base/SelfPermit.sol:SelfPermit",
          "contracts/interfaces/ISelfPermit.sol:ISelfPermit",
          "contracts/base/PeripheryValidation.sol:PeripheryValidation",
          "contracts/base/LiquidityManagement.sol:LiquidityManagement",
          "contracts/base/PeripheryPayments.sol:PeripheryPayments",
          "contracts/base/PoolInitializer.sol:PoolInitializer",
          "contracts/base/PeripheryImmutableState.sol:PeripheryImmutableState",
          "contracts/base/ERC721Permit.sol:ERC721Permit",
          "contracts/base/Multicall.sol:Multicall",
          "contracts/interfaces/IMulticall.sol:IMulticall",
          "contracts/interfaces/INonfungiblePositionManager.sol:INonfungiblePositionManager",
          "contracts/interfaces/IERC721Permit.sol:IERC721Permit",
          "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "contracts/base/BlockTimestamp.sol:BlockTimestamp",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable",
          "contracts/interfaces/IPeripheryImmutableState.sol:IPeripheryImmutableState",
          "contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments",
          "@surge/surge-core/contracts/interfaces/callback/IMintCallback.sol:IMintCallback",
          "contracts/interfaces/IPoolInitializer.sol:IPoolInitializer"
        ],
        "libraries": [
          "contracts/libraries/PositionKey.sol:PositionKey",
          "contracts/libraries/PoolAddress.sol:PoolAddress",
          "@surge/surge-core/contracts/libraries/FixedPoint128.sol:FixedPoint128",
          "@surge/surge-core/contracts/libraries/FullMath.sol:FullMath"
        ],
        "methods": [
          "initialize(address,address,address)",
          "positions(uint256)",
          "mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))",
          "tokenURI(uint256)",
          "baseURI()",
          "increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))",
          "decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))",
          "collect((uint256,address,uint128,uint128))",
          "burn(uint256)",
          "getApproved(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/base/Multicall.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_nextId",
            "src": "contracts/NonfungiblePositionManager.sol:66"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_nextPoolId",
            "src": "contracts/NonfungiblePositionManager.sol:68"
          },
          {
            "kind": "incorrect-initializer-order",
            "src": "contracts/NonfungiblePositionManager.sol:76",
            "expectedLinearization": [
              "ContextUpgradeable",
              "ERC721Upgradeable",
              "ERC721Permit",
              "PeripheryImmutableState"
            ],
            "foundOrder": [
              "ERC165Upgradeable",
              "ERC721Upgradeable",
              "ERC721Permit",
              "PeripheryImmutableState"
            ]
          },
          {
            "kind": "incorrect-initializer-order",
            "src": "contracts/NonfungiblePositionManager.sol:76",
            "expectedLinearization": [
              "ContextUpgradeable",
              "ERC721Upgradeable",
              "ERC721Permit",
              "PeripheryImmutableState"
            ],
            "foundOrder": [
              "ERC165Upgradeable",
              "ERC721Upgradeable",
              "ERC721Permit",
              "PeripheryImmutableState"
            ]
          },
          {
            "kind": "incorrect-initializer-order",
            "src": "contracts/NonfungiblePositionManager.sol:76",
            "expectedLinearization": [
              "ContextUpgradeable",
              "ERC721Upgradeable",
              "ERC721Permit",
              "PeripheryImmutableState"
            ],
            "foundOrder": [
              "ERC165Upgradeable",
              "ERC721Upgradeable",
              "ERC721Permit",
              "PeripheryImmutableState"
            ]
          },
          {
            "kind": "incorrect-initializer-order",
            "src": "contracts/NonfungiblePositionManager.sol:77",
            "expectedLinearization": [
              "ContextUpgradeable",
              "ERC721Upgradeable",
              "ERC721Permit",
              "PeripheryImmutableState"
            ],
            "foundOrder": [
              "ERC165Upgradeable",
              "ERC721Upgradeable",
              "ERC721Permit",
              "PeripheryImmutableState"
            ]
          },
          {
            "kind": "missing-initializer-call",
            "src": "contracts/NonfungiblePositionManager.sol:73",
            "parentContracts": [
              "ContextUpgradeable"
            ]
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_holderTokens",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_struct(UintSet)2919_storage)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenOwners",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(UintToAddressMap)2296_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
            },
            {
              "label": "_baseURI",
              "offset": 0,
              "slot": "109",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "110",
              "type": "t_array(t_uint256)41_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
            },
            {
              "label": "nameHash",
              "offset": 0,
              "slot": "151",
              "type": "t_bytes32",
              "contract": "ERC721Permit",
              "src": "contracts/base/ERC721Permit.sol:21"
            },
            {
              "label": "versionHash",
              "offset": 0,
              "slot": "152",
              "type": "t_bytes32",
              "contract": "ERC721Permit",
              "src": "contracts/base/ERC721Permit.sol:24"
            },
            {
              "label": "factory",
              "offset": 0,
              "slot": "153",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:12"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "154",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:14"
            },
            {
              "label": "_poolIds",
              "offset": 0,
              "slot": "155",
              "type": "t_mapping(t_address,t_uint80)",
              "contract": "NonfungiblePositionManager",
              "src": "contracts/NonfungiblePositionManager.sol:57"
            },
            {
              "label": "_poolIdToPoolKey",
              "offset": 0,
              "slot": "156",
              "type": "t_mapping(t_uint80,t_struct(PoolKey)7808_storage)",
              "contract": "NonfungiblePositionManager",
              "src": "contracts/NonfungiblePositionManager.sol:60"
            },
            {
              "label": "_positions",
              "offset": 0,
              "slot": "157",
              "type": "t_mapping(t_uint256,t_struct(Position)4847_storage)",
              "contract": "NonfungiblePositionManager",
              "src": "contracts/NonfungiblePositionManager.sol:63"
            },
            {
              "label": "_nextId",
              "offset": 0,
              "slot": "158",
              "type": "t_uint176",
              "contract": "NonfungiblePositionManager",
              "src": "contracts/NonfungiblePositionManager.sol:66"
            },
            {
              "label": "_nextPoolId",
              "offset": 22,
              "slot": "158",
              "type": "t_uint80",
              "contract": "NonfungiblePositionManager",
              "src": "contracts/NonfungiblePositionManager.sol:68"
            },
            {
              "label": "_tokenDescriptor",
              "offset": 0,
              "slot": "159",
              "type": "t_address",
              "contract": "NonfungiblePositionManager",
              "src": "contracts/NonfungiblePositionManager.sol:71"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(MapEntry)1970_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]",
              "numberOfBytes": "1312"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintSet)2919_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint80)": {
              "label": "mapping(address => uint80)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Position)4847_storage)": {
              "label": "mapping(uint256 => struct NonfungiblePositionManager.Position)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint80,t_struct(PoolKey)7808_storage)": {
              "label": "mapping(uint80 => struct PoolAddress.PoolKey)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Map)1978_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)1970_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(MapEntry)1970_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(PoolKey)7808_storage": {
              "label": "struct PoolAddress.PoolKey",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "fee",
                  "type": "t_uint24",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Position)4847_storage": {
              "label": "struct NonfungiblePositionManager.Position",
              "members": [
                {
                  "label": "nonce",
                  "type": "t_uint96",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "operator",
                  "type": "t_address",
                  "offset": 12,
                  "slot": "0"
                },
                {
                  "label": "poolId",
                  "type": "t_uint80",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tickLower",
                  "type": "t_int24",
                  "offset": 10,
                  "slot": "1"
                },
                {
                  "label": "tickUpper",
                  "type": "t_int24",
                  "offset": 13,
                  "slot": "1"
                },
                {
                  "label": "liquidity",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "1"
                },
                {
                  "label": "feeGrowthInside0LastX128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "feeGrowthInside1LastX128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "tokensOwed0",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "tokensOwed1",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Set)2533_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintSet)2919_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2533_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintToAddressMap)2296_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)1978_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint176": {
              "label": "uint176",
              "numberOfBytes": "22"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/base/BlockTimestamp.sol:BlockTimestamp": {
        "src": "contracts/base/BlockTimestamp.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/base/ERC721Permit.sol:ERC721Permit": {
        "src": "contracts/base/ERC721Permit.sol:16",
        "inherit": [
          "contracts/interfaces/IERC721Permit.sol:IERC721Permit",
          "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "contracts/base/BlockTimestamp.sol:BlockTimestamp",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "contracts/libraries/ChainId.sol:ChainId"
        ],
        "methods": [
          "DOMAIN_SEPARATOR()",
          "permit(address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_holderTokens",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_struct(UintSet)2919_storage)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenOwners",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(UintToAddressMap)2296_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
            },
            {
              "label": "_baseURI",
              "offset": 0,
              "slot": "109",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "110",
              "type": "t_array(t_uint256)41_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
            },
            {
              "label": "nameHash",
              "offset": 0,
              "slot": "151",
              "type": "t_bytes32",
              "contract": "ERC721Permit",
              "src": "contracts/base/ERC721Permit.sol:21"
            },
            {
              "label": "versionHash",
              "offset": 0,
              "slot": "152",
              "type": "t_bytes32",
              "contract": "ERC721Permit",
              "src": "contracts/base/ERC721Permit.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(MapEntry)1970_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]",
              "numberOfBytes": "1312"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintSet)2919_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Map)1978_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)1970_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(MapEntry)1970_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2533_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintSet)2919_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2533_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintToAddressMap)2296_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)1978_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/base/LiquidityManagement.sol:LiquidityManagement": {
        "src": "contracts/base/LiquidityManagement.sol:18",
        "inherit": [
          "contracts/base/PeripheryPayments.sol:PeripheryPayments",
          "contracts/base/PeripheryImmutableState.sol:PeripheryImmutableState",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable",
          "contracts/interfaces/IPeripheryImmutableState.sol:IPeripheryImmutableState",
          "contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments",
          "@surge/surge-core/contracts/interfaces/callback/IMintCallback.sol:IMintCallback"
        ],
        "libraries": [
          "contracts/libraries/CallbackValidation.sol:CallbackValidation",
          "contracts/libraries/PoolAddress.sol:PoolAddress",
          "@surge/surge-core/contracts/libraries/TickMath.sol:TickMath",
          "contracts/libraries/LiquidityAmounts.sol:LiquidityAmounts"
        ],
        "methods": [
          "mintCallback(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "factory",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:12"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/base/Multicall.sol:Multicall": {
        "src": "contracts/base/Multicall.sol:9",
        "inherit": [
          "contracts/interfaces/IMulticall.sol:IMulticall"
        ],
        "libraries": [],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/base/Multicall.sol:14"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/base/PeripheryImmutableState.sol:PeripheryImmutableState": {
        "src": "contracts/base/PeripheryImmutableState.sol:10",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable",
          "contracts/interfaces/IPeripheryImmutableState.sol:IPeripheryImmutableState"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "factory",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:12"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/base/PeripheryPayments.sol:PeripheryPayments": {
        "src": "contracts/base/PeripheryPayments.sol:13",
        "inherit": [
          "contracts/base/PeripheryImmutableState.sol:PeripheryImmutableState",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable",
          "contracts/interfaces/IPeripheryImmutableState.sol:IPeripheryImmutableState",
          "contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments"
        ],
        "libraries": [
          "contracts/libraries/TransferHelper.sol:TransferHelper"
        ],
        "methods": [
          "()",
          "unwrapWETH9(uint256,address)",
          "sweepToken(address,uint256,address)",
          "refundETH()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "factory",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:12"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/base/PeripheryValidation.sol:PeripheryValidation": {
        "src": "contracts/base/PeripheryValidation.sol:6",
        "inherit": [
          "contracts/base/BlockTimestamp.sol:BlockTimestamp"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/base/PoolInitializer.sol:PoolInitializer": {
        "src": "contracts/base/PoolInitializer.sol:11",
        "inherit": [
          "contracts/base/PeripheryImmutableState.sol:PeripheryImmutableState",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable",
          "contracts/interfaces/IPeripheryImmutableState.sol:IPeripheryImmutableState",
          "contracts/interfaces/IPoolInitializer.sol:IPoolInitializer"
        ],
        "libraries": [],
        "methods": [
          "createAndInitializePoolIfNecessary(address,address,uint24,uint160)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "factory",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:12"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/base/SelfPermit.sol:SelfPermit": {
        "src": "contracts/base/SelfPermit.sol:14",
        "inherit": [
          "contracts/interfaces/ISelfPermit.sol:ISelfPermit"
        ],
        "libraries": [],
        "methods": [
          "selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)",
          "selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)",
          "selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)",
          "selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IERC721Permit.sol:IERC721Permit": {
        "src": "contracts/interfaces/IERC721Permit.sol:8",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "PERMIT_TYPEHASH()",
          "DOMAIN_SEPARATOR()",
          "permit(address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IMulticall.sol:IMulticall": {
        "src": "contracts/interfaces/IMulticall.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/INonfungiblePositionManager.sol:INonfungiblePositionManager": {
        "src": "contracts/interfaces/INonfungiblePositionManager.sol:16",
        "inherit": [
          "contracts/interfaces/IERC721Permit.sol:IERC721Permit",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "contracts/interfaces/IPeripheryImmutableState.sol:IPeripheryImmutableState",
          "contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments",
          "contracts/interfaces/IPoolInitializer.sol:IPoolInitializer"
        ],
        "libraries": [],
        "methods": [
          "positions(uint256)",
          "mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))",
          "increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))",
          "decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))",
          "collect((uint256,address,uint128,uint128))",
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/INonfungibleTokenPositionDescriptor.sol:INonfungibleTokenPositionDescriptor": {
        "src": "contracts/interfaces/INonfungibleTokenPositionDescriptor.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenURI(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IPeripheryImmutableState.sol:IPeripheryImmutableState": {
        "src": "contracts/interfaces/IPeripheryImmutableState.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH9()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments": {
        "src": "contracts/interfaces/IPeripheryPayments.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "unwrapWETH9(uint256,address)",
          "refundETH()",
          "sweepToken(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IPoolInitializer.sol:IPoolInitializer": {
        "src": "contracts/interfaces/IPoolInitializer.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createAndInitializePoolIfNecessary(address,address,uint24,uint160)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/ISelfPermit.sol:ISelfPermit": {
        "src": "contracts/interfaces/ISelfPermit.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)",
          "selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)",
          "selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)",
          "selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/external/IERC1271.sol:IERC1271": {
        "src": "contracts/interfaces/external/IERC1271.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/external/IERC20PermitAllowed.sol:IERC20PermitAllowed": {
        "src": "contracts/interfaces/external/IERC20PermitAllowed.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/external/IWETH9.sol:IWETH9": {
        "src": "contracts/interfaces/external/IWETH9.sol:7",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/CallbackValidation.sol:CallbackValidation": {
        "src": "contracts/libraries/CallbackValidation.sol:8",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/PoolAddress.sol:PoolAddress"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/ChainId.sol:ChainId": {
        "src": "contracts/libraries/ChainId.sol:5",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/LiquidityAmounts.sol:LiquidityAmounts": {
        "src": "contracts/libraries/LiquidityAmounts.sol:9",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [
          "@surge/surge-core/contracts/libraries/FixedPoint96.sol:FixedPoint96",
          "@surge/surge-core/contracts/libraries/FullMath.sol:FullMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/PoolAddress.sol:PoolAddress": {
        "src": "contracts/libraries/PoolAddress.sol:7",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/PositionKey.sol:PositionKey": {
        "src": "contracts/libraries/PositionKey.sol:4",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/TransferHelper.sol:TransferHelper": {
        "src": "contracts/libraries/TransferHelper.sol:6",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/MockTimeNonfungiblePositionManager.sol:MockTimeNonfungiblePositionManager": {
        "src": "contracts/test/MockTimeNonfungiblePositionManager.sol:7",
        "version": {
          "withMetadata": "b5e8187c3f734f072c534f6f3b3ce5507e52aa72b3ff6b902059c44b6f5abb7c",
          "withoutMetadata": "b5e8187c3f734f072c534f6f3b3ce5507e52aa72b3ff6b902059c44b6f5abb7c",
          "linkedWithoutMetadata": "b5e8187c3f734f072c534f6f3b3ce5507e52aa72b3ff6b902059c44b6f5abb7c"
        },
        "inherit": [
          "contracts/NonfungiblePositionManager.sol:NonfungiblePositionManager",
          "contracts/base/SelfPermit.sol:SelfPermit",
          "contracts/interfaces/ISelfPermit.sol:ISelfPermit",
          "contracts/base/PeripheryValidation.sol:PeripheryValidation",
          "contracts/base/LiquidityManagement.sol:LiquidityManagement",
          "contracts/base/PeripheryPayments.sol:PeripheryPayments",
          "contracts/base/PoolInitializer.sol:PoolInitializer",
          "contracts/base/PeripheryImmutableState.sol:PeripheryImmutableState",
          "contracts/base/ERC721Permit.sol:ERC721Permit",
          "contracts/base/Multicall.sol:Multicall",
          "contracts/interfaces/IMulticall.sol:IMulticall",
          "contracts/interfaces/INonfungiblePositionManager.sol:INonfungiblePositionManager",
          "contracts/interfaces/IERC721Permit.sol:IERC721Permit",
          "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "contracts/base/BlockTimestamp.sol:BlockTimestamp",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable",
          "contracts/interfaces/IPeripheryImmutableState.sol:IPeripheryImmutableState",
          "contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments",
          "@surge/surge-core/contracts/interfaces/callback/IMintCallback.sol:IMintCallback",
          "contracts/interfaces/IPoolInitializer.sol:IPoolInitializer"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "setTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockTimeNonfungiblePositionManager",
            "src": "contracts/test/MockTimeNonfungiblePositionManager.sol:10"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/base/Multicall.sol:14"
          },
          {
            "kind": "missing-initializer",
            "src": "contracts/test/MockTimeNonfungiblePositionManager.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_holderTokens",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_struct(UintSet)2919_storage)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenOwners",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(UintToAddressMap)2296_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
            },
            {
              "label": "_baseURI",
              "offset": 0,
              "slot": "109",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "110",
              "type": "t_array(t_uint256)41_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
            },
            {
              "label": "nameHash",
              "offset": 0,
              "slot": "151",
              "type": "t_bytes32",
              "contract": "ERC721Permit",
              "src": "contracts/base/ERC721Permit.sol:21"
            },
            {
              "label": "versionHash",
              "offset": 0,
              "slot": "152",
              "type": "t_bytes32",
              "contract": "ERC721Permit",
              "src": "contracts/base/ERC721Permit.sol:24"
            },
            {
              "label": "factory",
              "offset": 0,
              "slot": "153",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:12"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "154",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:14"
            },
            {
              "label": "_poolIds",
              "offset": 0,
              "slot": "155",
              "type": "t_mapping(t_address,t_uint80)",
              "contract": "NonfungiblePositionManager",
              "src": "contracts/NonfungiblePositionManager.sol:57"
            },
            {
              "label": "_poolIdToPoolKey",
              "offset": 0,
              "slot": "156",
              "type": "t_mapping(t_uint80,t_struct(PoolKey)7808_storage)",
              "contract": "NonfungiblePositionManager",
              "src": "contracts/NonfungiblePositionManager.sol:60"
            },
            {
              "label": "_positions",
              "offset": 0,
              "slot": "157",
              "type": "t_mapping(t_uint256,t_struct(Position)4847_storage)",
              "contract": "NonfungiblePositionManager",
              "src": "contracts/NonfungiblePositionManager.sol:63"
            },
            {
              "label": "_nextId",
              "offset": 0,
              "slot": "158",
              "type": "t_uint176",
              "contract": "NonfungiblePositionManager",
              "src": "contracts/NonfungiblePositionManager.sol:66"
            },
            {
              "label": "_nextPoolId",
              "offset": 22,
              "slot": "158",
              "type": "t_uint80",
              "contract": "NonfungiblePositionManager",
              "src": "contracts/NonfungiblePositionManager.sol:68"
            },
            {
              "label": "_tokenDescriptor",
              "offset": 0,
              "slot": "159",
              "type": "t_address",
              "contract": "NonfungiblePositionManager",
              "src": "contracts/NonfungiblePositionManager.sol:71"
            },
            {
              "label": "time",
              "offset": 0,
              "slot": "160",
              "type": "t_uint256",
              "contract": "MockTimeNonfungiblePositionManager",
              "src": "contracts/test/MockTimeNonfungiblePositionManager.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(MapEntry)1970_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]",
              "numberOfBytes": "1312"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintSet)2919_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint80)": {
              "label": "mapping(address => uint80)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Position)4847_storage)": {
              "label": "mapping(uint256 => struct NonfungiblePositionManager.Position)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint80,t_struct(PoolKey)7808_storage)": {
              "label": "mapping(uint80 => struct PoolAddress.PoolKey)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Map)1978_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)1970_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(MapEntry)1970_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(PoolKey)7808_storage": {
              "label": "struct PoolAddress.PoolKey",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "fee",
                  "type": "t_uint24",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Position)4847_storage": {
              "label": "struct NonfungiblePositionManager.Position",
              "members": [
                {
                  "label": "nonce",
                  "type": "t_uint96",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "operator",
                  "type": "t_address",
                  "offset": 12,
                  "slot": "0"
                },
                {
                  "label": "poolId",
                  "type": "t_uint80",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tickLower",
                  "type": "t_int24",
                  "offset": 10,
                  "slot": "1"
                },
                {
                  "label": "tickUpper",
                  "type": "t_int24",
                  "offset": 13,
                  "slot": "1"
                },
                {
                  "label": "liquidity",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "1"
                },
                {
                  "label": "feeGrowthInside0LastX128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "feeGrowthInside1LastX128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "tokensOwed0",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "tokensOwed1",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Set)2533_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintSet)2919_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2533_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintToAddressMap)2296_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)1978_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint176": {
              "label": "uint176",
              "numberOfBytes": "22"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:14",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol:SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol:18",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:20",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:22",
        "version": {
          "withMetadata": "30a1430c38ef554db3378f9b58aefe7944bcc8602be235f33d07fac941985304",
          "withoutMetadata": "5fffbdf9f691b23b94f16f0ae221e27af0cc297ba8bc1848ab55bedf3dfb612a",
          "linkedWithoutMetadata": "5fffbdf9f691b23b94f16f0ae221e27af0cc297ba8bc1848ab55bedf3dfb612a"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol:SafeMathUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol:EnumerableSetUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/EnumerableMapUpgradeable.sol:EnumerableMapUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable"
        ],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "baseURI()",
          "tokenOfOwnerByIndex(address,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "incorrect-initializer-order",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:96",
            "expectedLinearization": [
              "ContextUpgradeable",
              "ERC165Upgradeable"
            ],
            "foundOrder": [
              "ERC165Upgradeable"
            ]
          },
          {
            "kind": "missing-initializer-call",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:94",
            "parentContracts": [
              "ContextUpgradeable"
            ]
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_holderTokens",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_struct(UintSet)2919_storage)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenOwners",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(UintToAddressMap)2296_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
            },
            {
              "label": "_baseURI",
              "offset": 0,
              "slot": "109",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "110",
              "type": "t_array(t_uint256)41_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(MapEntry)1970_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]",
              "numberOfBytes": "1312"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintSet)2919_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Map)1978_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)1970_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(MapEntry)1970_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2533_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintSet)2919_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2533_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintToAddressMap)2296_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)1978_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:11",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:11",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:10",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/utils/EnumerableMapUpgradeable.sol:EnumerableMapUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/EnumerableMapUpgradeable.sol:29",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol:EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol:29",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:8",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/drafts/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/drafts/IERC20Permit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/IFactory.sol:IFactory": {
        "src": "@surge/surge-core/contracts/interfaces/IFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "feeAmountTickSpacing(uint24)",
          "getPool(address,address,uint24)",
          "createPool(address,address,uint24)",
          "setOwner(address)",
          "enableFeeAmount(uint24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/IPool.sol:IPool": {
        "src": "@surge/surge-core/contracts/interfaces/IPool.sol:15",
        "inherit": [
          "@surge/surge-core/contracts/interfaces/pool/IPoolEvents.sol:IPoolEvents",
          "@surge/surge-core/contracts/interfaces/pool/IPoolOwnerActions.sol:IPoolOwnerActions",
          "@surge/surge-core/contracts/interfaces/pool/IPoolActions.sol:IPoolActions",
          "@surge/surge-core/contracts/interfaces/pool/IPoolDerivedState.sol:IPoolDerivedState",
          "@surge/surge-core/contracts/interfaces/pool/IPoolState.sol:IPoolState",
          "@surge/surge-core/contracts/interfaces/pool/IPoolImmutables.sol:IPoolImmutables"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/callback/IMintCallback.sol:IMintCallback": {
        "src": "@surge/surge-core/contracts/interfaces/callback/IMintCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mintCallback(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolActions.sol:IPoolActions": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(uint160)",
          "mint(address,int24,int24,uint128,bytes)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "swap(address,bool,int256,uint160,bytes)",
          "flash(address,uint256,uint256,bytes)",
          "increaseObservationCardinalityNext(uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolDerivedState.sol:IPoolDerivedState": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolDerivedState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "observe(uint32[])",
          "snapshotCumulativesInside(int24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolEvents.sol:IPoolEvents": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolImmutables.sol:IPoolImmutables": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolImmutables.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "token0()",
          "token1()",
          "fee()",
          "tickSpacing()",
          "maxLiquidityPerTick()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolOwnerActions.sol:IPoolOwnerActions": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolOwnerActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setFeeProtocol(uint8,uint8)",
          "collectProtocol(address,uint128,uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolState.sol:IPoolState": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "slot0()",
          "feeGrowthGlobal0X128()",
          "feeGrowthGlobal1X128()",
          "protocolFees()",
          "liquidity()",
          "ticks(int24)",
          "tickBitmap(int16)",
          "positions(bytes32)",
          "observations(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/libraries/FixedPoint128.sol:FixedPoint128": {
        "src": "@surge/surge-core/contracts/libraries/FixedPoint128.sol:6",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/libraries/FixedPoint96.sol:FixedPoint96": {
        "src": "@surge/surge-core/contracts/libraries/FixedPoint96.sol:7",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/libraries/FullMath.sol:FullMath": {
        "src": "@surge/surge-core/contracts/libraries/FullMath.sol:7",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/libraries/TickMath.sol:TickMath": {
        "src": "@surge/surge-core/contracts/libraries/TickMath.sol:7",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/NonfungiblePositionManager.sol:NonfungiblePositionManager": {
        "src": "contracts/NonfungiblePositionManager.sol:24",
        "version": {
          "withMetadata": "42bb48e78e573c6e1f40573b23b9accc6fae81c4c59cb48d54a208e4ec420816",
          "withoutMetadata": "31edd1d9c305d2e422cd83b60f4a8baa50f5eca8a36b417362a1630a6136f95e",
          "linkedWithoutMetadata": "31edd1d9c305d2e422cd83b60f4a8baa50f5eca8a36b417362a1630a6136f95e"
        },
        "inherit": [
          "contracts/base/SelfPermit.sol:SelfPermit",
          "contracts/interfaces/ISelfPermit.sol:ISelfPermit",
          "contracts/base/PeripheryValidation.sol:PeripheryValidation",
          "contracts/base/LiquidityManagement.sol:LiquidityManagement",
          "contracts/base/PeripheryPayments.sol:PeripheryPayments",
          "contracts/base/PoolInitializer.sol:PoolInitializer",
          "contracts/base/PeripheryImmutableState.sol:PeripheryImmutableState",
          "contracts/base/ERC721Permit.sol:ERC721Permit",
          "contracts/base/Multicall.sol:Multicall",
          "contracts/interfaces/IMulticall.sol:IMulticall",
          "contracts/interfaces/INonfungiblePositionManager.sol:INonfungiblePositionManager",
          "contracts/interfaces/IERC721Permit.sol:IERC721Permit",
          "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "contracts/base/BlockTimestamp.sol:BlockTimestamp",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable",
          "contracts/interfaces/IPeripheryImmutableState.sol:IPeripheryImmutableState",
          "contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments",
          "@surge/surge-core/contracts/interfaces/callback/IMintCallback.sol:IMintCallback",
          "contracts/interfaces/IPoolInitializer.sol:IPoolInitializer"
        ],
        "libraries": [
          "contracts/libraries/PositionKey.sol:PositionKey",
          "contracts/libraries/PoolAddress.sol:PoolAddress",
          "@surge/surge-core/contracts/libraries/FixedPoint128.sol:FixedPoint128",
          "@surge/surge-core/contracts/libraries/FullMath.sol:FullMath"
        ],
        "methods": [
          "initialize(address,address,address)",
          "positions(uint256)",
          "mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))",
          "tokenURI(uint256)",
          "baseURI()",
          "increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))",
          "decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))",
          "collect((uint256,address,uint128,uint128))",
          "burn(uint256)",
          "getApproved(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/base/Multicall.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_nextId",
            "src": "contracts/NonfungiblePositionManager.sol:66"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_nextPoolId",
            "src": "contracts/NonfungiblePositionManager.sol:68"
          },
          {
            "kind": "incorrect-initializer-order",
            "src": "contracts/NonfungiblePositionManager.sol:76",
            "expectedLinearization": [
              "ContextUpgradeable",
              "ERC721Upgradeable",
              "ERC721Permit",
              "PeripheryImmutableState"
            ],
            "foundOrder": [
              "ERC165Upgradeable",
              "ERC721Upgradeable",
              "ERC721Permit",
              "PeripheryImmutableState"
            ]
          },
          {
            "kind": "incorrect-initializer-order",
            "src": "contracts/NonfungiblePositionManager.sol:76",
            "expectedLinearization": [
              "ContextUpgradeable",
              "ERC721Upgradeable",
              "ERC721Permit",
              "PeripheryImmutableState"
            ],
            "foundOrder": [
              "ERC165Upgradeable",
              "ERC721Upgradeable",
              "ERC721Permit",
              "PeripheryImmutableState"
            ]
          },
          {
            "kind": "incorrect-initializer-order",
            "src": "contracts/NonfungiblePositionManager.sol:76",
            "expectedLinearization": [
              "ContextUpgradeable",
              "ERC721Upgradeable",
              "ERC721Permit",
              "PeripheryImmutableState"
            ],
            "foundOrder": [
              "ERC165Upgradeable",
              "ERC721Upgradeable",
              "ERC721Permit",
              "PeripheryImmutableState"
            ]
          },
          {
            "kind": "incorrect-initializer-order",
            "src": "contracts/NonfungiblePositionManager.sol:77",
            "expectedLinearization": [
              "ContextUpgradeable",
              "ERC721Upgradeable",
              "ERC721Permit",
              "PeripheryImmutableState"
            ],
            "foundOrder": [
              "ERC165Upgradeable",
              "ERC721Upgradeable",
              "ERC721Permit",
              "PeripheryImmutableState"
            ]
          },
          {
            "kind": "missing-initializer-call",
            "src": "contracts/NonfungiblePositionManager.sol:73",
            "parentContracts": [
              "ContextUpgradeable"
            ]
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_holderTokens",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_struct(UintSet)2919_storage)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenOwners",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(UintToAddressMap)2296_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
            },
            {
              "label": "_baseURI",
              "offset": 0,
              "slot": "109",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "110",
              "type": "t_array(t_uint256)41_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
            },
            {
              "label": "nameHash",
              "offset": 0,
              "slot": "151",
              "type": "t_bytes32",
              "contract": "ERC721Permit",
              "src": "contracts/base/ERC721Permit.sol:21"
            },
            {
              "label": "versionHash",
              "offset": 0,
              "slot": "152",
              "type": "t_bytes32",
              "contract": "ERC721Permit",
              "src": "contracts/base/ERC721Permit.sol:24"
            },
            {
              "label": "factory",
              "offset": 0,
              "slot": "153",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:12"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "154",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:14"
            },
            {
              "label": "_poolIds",
              "offset": 0,
              "slot": "155",
              "type": "t_mapping(t_address,t_uint80)",
              "contract": "NonfungiblePositionManager",
              "src": "contracts/NonfungiblePositionManager.sol:57"
            },
            {
              "label": "_poolIdToPoolKey",
              "offset": 0,
              "slot": "156",
              "type": "t_mapping(t_uint80,t_struct(PoolKey)7808_storage)",
              "contract": "NonfungiblePositionManager",
              "src": "contracts/NonfungiblePositionManager.sol:60"
            },
            {
              "label": "_positions",
              "offset": 0,
              "slot": "157",
              "type": "t_mapping(t_uint256,t_struct(Position)4847_storage)",
              "contract": "NonfungiblePositionManager",
              "src": "contracts/NonfungiblePositionManager.sol:63"
            },
            {
              "label": "_nextId",
              "offset": 0,
              "slot": "158",
              "type": "t_uint176",
              "contract": "NonfungiblePositionManager",
              "src": "contracts/NonfungiblePositionManager.sol:66"
            },
            {
              "label": "_nextPoolId",
              "offset": 22,
              "slot": "158",
              "type": "t_uint80",
              "contract": "NonfungiblePositionManager",
              "src": "contracts/NonfungiblePositionManager.sol:68"
            },
            {
              "label": "_tokenDescriptor",
              "offset": 0,
              "slot": "159",
              "type": "t_address",
              "contract": "NonfungiblePositionManager",
              "src": "contracts/NonfungiblePositionManager.sol:71"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(MapEntry)1970_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]",
              "numberOfBytes": "1312"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintSet)2919_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint80)": {
              "label": "mapping(address => uint80)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Position)4847_storage)": {
              "label": "mapping(uint256 => struct NonfungiblePositionManager.Position)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint80,t_struct(PoolKey)7808_storage)": {
              "label": "mapping(uint80 => struct PoolAddress.PoolKey)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Map)1978_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)1970_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(MapEntry)1970_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(PoolKey)7808_storage": {
              "label": "struct PoolAddress.PoolKey",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "fee",
                  "type": "t_uint24",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Position)4847_storage": {
              "label": "struct NonfungiblePositionManager.Position",
              "members": [
                {
                  "label": "nonce",
                  "type": "t_uint96",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "operator",
                  "type": "t_address",
                  "offset": 12,
                  "slot": "0"
                },
                {
                  "label": "poolId",
                  "type": "t_uint80",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tickLower",
                  "type": "t_int24",
                  "offset": 10,
                  "slot": "1"
                },
                {
                  "label": "tickUpper",
                  "type": "t_int24",
                  "offset": 13,
                  "slot": "1"
                },
                {
                  "label": "liquidity",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "1"
                },
                {
                  "label": "feeGrowthInside0LastX128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "feeGrowthInside1LastX128",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "tokensOwed0",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "tokensOwed1",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Set)2533_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintSet)2919_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2533_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintToAddressMap)2296_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)1978_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint176": {
              "label": "uint176",
              "numberOfBytes": "22"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/base/BlockTimestamp.sol:BlockTimestamp": {
        "src": "contracts/base/BlockTimestamp.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/base/ERC721Permit.sol:ERC721Permit": {
        "src": "contracts/base/ERC721Permit.sol:16",
        "inherit": [
          "contracts/interfaces/IERC721Permit.sol:IERC721Permit",
          "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "contracts/base/BlockTimestamp.sol:BlockTimestamp",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "contracts/libraries/ChainId.sol:ChainId"
        ],
        "methods": [
          "DOMAIN_SEPARATOR()",
          "permit(address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_holderTokens",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_struct(UintSet)2919_storage)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenOwners",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(UintToAddressMap)2296_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
            },
            {
              "label": "_baseURI",
              "offset": 0,
              "slot": "109",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "110",
              "type": "t_array(t_uint256)41_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
            },
            {
              "label": "nameHash",
              "offset": 0,
              "slot": "151",
              "type": "t_bytes32",
              "contract": "ERC721Permit",
              "src": "contracts/base/ERC721Permit.sol:21"
            },
            {
              "label": "versionHash",
              "offset": 0,
              "slot": "152",
              "type": "t_bytes32",
              "contract": "ERC721Permit",
              "src": "contracts/base/ERC721Permit.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(MapEntry)1970_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]",
              "numberOfBytes": "1312"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintSet)2919_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Map)1978_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)1970_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(MapEntry)1970_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2533_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintSet)2919_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2533_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintToAddressMap)2296_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)1978_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/base/LiquidityManagement.sol:LiquidityManagement": {
        "src": "contracts/base/LiquidityManagement.sol:18",
        "inherit": [
          "contracts/base/PeripheryPayments.sol:PeripheryPayments",
          "contracts/base/PeripheryImmutableState.sol:PeripheryImmutableState",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable",
          "contracts/interfaces/IPeripheryImmutableState.sol:IPeripheryImmutableState",
          "contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments",
          "@surge/surge-core/contracts/interfaces/callback/IMintCallback.sol:IMintCallback"
        ],
        "libraries": [
          "contracts/libraries/CallbackValidation.sol:CallbackValidation",
          "contracts/libraries/PoolAddress.sol:PoolAddress",
          "@surge/surge-core/contracts/libraries/TickMath.sol:TickMath",
          "contracts/libraries/LiquidityAmounts.sol:LiquidityAmounts"
        ],
        "methods": [
          "mintCallback(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "factory",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:12"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/base/Multicall.sol:Multicall": {
        "src": "contracts/base/Multicall.sol:9",
        "inherit": [
          "contracts/interfaces/IMulticall.sol:IMulticall"
        ],
        "libraries": [],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/base/Multicall.sol:14"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/base/PeripheryImmutableState.sol:PeripheryImmutableState": {
        "src": "contracts/base/PeripheryImmutableState.sol:10",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable",
          "contracts/interfaces/IPeripheryImmutableState.sol:IPeripheryImmutableState"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "factory",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:12"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/base/PeripheryPayments.sol:PeripheryPayments": {
        "src": "contracts/base/PeripheryPayments.sol:13",
        "inherit": [
          "contracts/base/PeripheryImmutableState.sol:PeripheryImmutableState",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable",
          "contracts/interfaces/IPeripheryImmutableState.sol:IPeripheryImmutableState",
          "contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments"
        ],
        "libraries": [
          "contracts/libraries/TransferHelper.sol:TransferHelper"
        ],
        "methods": [
          "()",
          "unwrapWETH9(uint256,address)",
          "sweepToken(address,uint256,address)",
          "refundETH()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "factory",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:12"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/base/PeripheryValidation.sol:PeripheryValidation": {
        "src": "contracts/base/PeripheryValidation.sol:6",
        "inherit": [
          "contracts/base/BlockTimestamp.sol:BlockTimestamp"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/base/PoolInitializer.sol:PoolInitializer": {
        "src": "contracts/base/PoolInitializer.sol:11",
        "inherit": [
          "contracts/base/PeripheryImmutableState.sol:PeripheryImmutableState",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable",
          "contracts/interfaces/IPeripheryImmutableState.sol:IPeripheryImmutableState",
          "contracts/interfaces/IPoolInitializer.sol:IPoolInitializer"
        ],
        "libraries": [],
        "methods": [
          "createAndInitializePoolIfNecessary(address,address,uint24,uint160)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "factory",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:12"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/base/SelfPermit.sol:SelfPermit": {
        "src": "contracts/base/SelfPermit.sol:14",
        "inherit": [
          "contracts/interfaces/ISelfPermit.sol:ISelfPermit"
        ],
        "libraries": [],
        "methods": [
          "selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)",
          "selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)",
          "selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)",
          "selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IERC721Permit.sol:IERC721Permit": {
        "src": "contracts/interfaces/IERC721Permit.sol:8",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "PERMIT_TYPEHASH()",
          "DOMAIN_SEPARATOR()",
          "permit(address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IMulticall.sol:IMulticall": {
        "src": "contracts/interfaces/IMulticall.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/INonfungiblePositionManager.sol:INonfungiblePositionManager": {
        "src": "contracts/interfaces/INonfungiblePositionManager.sol:16",
        "inherit": [
          "contracts/interfaces/IERC721Permit.sol:IERC721Permit",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "contracts/interfaces/IPeripheryImmutableState.sol:IPeripheryImmutableState",
          "contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments",
          "contracts/interfaces/IPoolInitializer.sol:IPoolInitializer"
        ],
        "libraries": [],
        "methods": [
          "positions(uint256)",
          "mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))",
          "increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))",
          "decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))",
          "collect((uint256,address,uint128,uint128))",
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/INonfungibleTokenPositionDescriptor.sol:INonfungibleTokenPositionDescriptor": {
        "src": "contracts/interfaces/INonfungibleTokenPositionDescriptor.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenURI(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IPeripheryImmutableState.sol:IPeripheryImmutableState": {
        "src": "contracts/interfaces/IPeripheryImmutableState.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH9()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments": {
        "src": "contracts/interfaces/IPeripheryPayments.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "unwrapWETH9(uint256,address)",
          "refundETH()",
          "sweepToken(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IPoolInitializer.sol:IPoolInitializer": {
        "src": "contracts/interfaces/IPoolInitializer.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createAndInitializePoolIfNecessary(address,address,uint24,uint160)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/ISelfPermit.sol:ISelfPermit": {
        "src": "contracts/interfaces/ISelfPermit.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)",
          "selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)",
          "selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)",
          "selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/external/IERC1271.sol:IERC1271": {
        "src": "contracts/interfaces/external/IERC1271.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/external/IERC20PermitAllowed.sol:IERC20PermitAllowed": {
        "src": "contracts/interfaces/external/IERC20PermitAllowed.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/external/IWETH9.sol:IWETH9": {
        "src": "contracts/interfaces/external/IWETH9.sol:7",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/CallbackValidation.sol:CallbackValidation": {
        "src": "contracts/libraries/CallbackValidation.sol:8",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/PoolAddress.sol:PoolAddress"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/ChainId.sol:ChainId": {
        "src": "contracts/libraries/ChainId.sol:5",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/LiquidityAmounts.sol:LiquidityAmounts": {
        "src": "contracts/libraries/LiquidityAmounts.sol:9",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [
          "@surge/surge-core/contracts/libraries/FixedPoint96.sol:FixedPoint96",
          "@surge/surge-core/contracts/libraries/FullMath.sol:FullMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/PoolAddress.sol:PoolAddress": {
        "src": "contracts/libraries/PoolAddress.sol:7",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/PositionKey.sol:PositionKey": {
        "src": "contracts/libraries/PositionKey.sol:4",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/TransferHelper.sol:TransferHelper": {
        "src": "contracts/libraries/TransferHelper.sol:6",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      }
    },
    {
      "@surge/surge-core/contracts/libraries/Oracle.sol:Oracle": {
        "src": "@surge/surge-core/contracts/libraries/Oracle.sol:11",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/MockObservations.sol:MockObservations": {
        "src": "contracts/test/MockObservations.sol:6",
        "version": {
          "withMetadata": "a755a36d8210d222bb87cb7b81708c8d71e916de914487a2be69017daf56e6a3",
          "withoutMetadata": "909857f00aea33e6cee4bc53019c263cba931b339abeb78fee38594e3de880aa",
          "linkedWithoutMetadata": "909857f00aea33e6cee4bc53019c263cba931b339abeb78fee38594e3de880aa"
        },
        "inherit": [],
        "libraries": [
          "@surge/surge-core/contracts/libraries/Oracle.sol:Oracle"
        ],
        "methods": [
          "(uint32[4],int56[4],uint128[4],bool[4],int24,uint16,uint16,bool,uint128)",
          "slot0()",
          "observations(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockObservations",
            "src": "contracts/test/MockObservations.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "oracleObservations",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_struct(Observation)11_storage)4_storage",
              "contract": "MockObservations",
              "src": "contracts/test/MockObservations.sol:7"
            },
            {
              "label": "slot0Tick",
              "offset": 0,
              "slot": "4",
              "type": "t_int24",
              "contract": "MockObservations",
              "src": "contracts/test/MockObservations.sol:9"
            },
            {
              "label": "slot0ObservationCardinality",
              "offset": 3,
              "slot": "4",
              "type": "t_uint16",
              "contract": "MockObservations",
              "src": "contracts/test/MockObservations.sol:10"
            },
            {
              "label": "slot0ObservationIndex",
              "offset": 5,
              "slot": "4",
              "type": "t_uint16",
              "contract": "MockObservations",
              "src": "contracts/test/MockObservations.sol:11"
            },
            {
              "label": "liquidity",
              "offset": 7,
              "slot": "4",
              "type": "t_uint128",
              "contract": "MockObservations",
              "src": "contracts/test/MockObservations.sol:12"
            },
            {
              "label": "lastObservationCurrentTimestamp",
              "offset": 23,
              "slot": "4",
              "type": "t_bool",
              "contract": "MockObservations",
              "src": "contracts/test/MockObservations.sol:14"
            }
          ],
          "types": {
            "t_array(t_struct(Observation)11_storage)4_storage": {
              "label": "struct Oracle.Observation[4]",
              "numberOfBytes": "128"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_int24": {
              "label": "int24",
              "numberOfBytes": "3"
            },
            "t_int56": {
              "label": "int56",
              "numberOfBytes": "7"
            },
            "t_struct(Observation)11_storage": {
              "label": "struct Oracle.Observation",
              "members": [
                {
                  "label": "blockTimestamp",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tickCumulative",
                  "type": "t_int56",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "secondsPerLiquidityCumulativeX128",
                  "type": "t_uint160",
                  "offset": 11,
                  "slot": "0"
                },
                {
                  "label": "initialized",
                  "type": "t_bool",
                  "offset": 31,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint160": {
              "label": "uint160",
              "numberOfBytes": "20"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      }
    },
    {
      "contracts/test/MockObservable.sol:MockObservable": {
        "src": "contracts/test/MockObservable.sol:4",
        "version": {
          "withMetadata": "4ee1a267322dbf2fba6127f0d638be55bace18d0117ae1dd7f9e8edb8cf9da2a",
          "withoutMetadata": "4bf36c9c90fb84a56f7dfb33d747820d21db6ac793bd5ef4f980543e9e411efd",
          "linkedWithoutMetadata": "4bf36c9c90fb84a56f7dfb33d747820d21db6ac793bd5ef4f980543e9e411efd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint32[],int56[],uint160[])",
          "observe(uint32[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockObservable",
            "src": "contracts/test/MockObservable.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "observation0",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(Observation)12_storage",
              "contract": "MockObservable",
              "src": "contracts/test/MockObservable.sol:5"
            },
            {
              "label": "observation1",
              "offset": 0,
              "slot": "1",
              "type": "t_struct(Observation)12_storage",
              "contract": "MockObservable",
              "src": "contracts/test/MockObservable.sol:6"
            }
          ],
          "types": {
            "t_int56": {
              "label": "int56",
              "numberOfBytes": "7"
            },
            "t_struct(Observation)12_storage": {
              "label": "struct MockObservable.Observation",
              "members": [
                {
                  "label": "secondsAgo",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tickCumulatives",
                  "type": "t_int56",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "secondsPerLiquidityCumulativeX128s",
                  "type": "t_uint160",
                  "offset": 11,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint160": {
              "label": "uint160",
              "numberOfBytes": "20"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      }
    },
    {
      "contracts/lens/InterfaceMulticall.sol:InterfaceMulticall": {
        "src": "contracts/lens/InterfaceMulticall.sol:6",
        "version": {
          "withMetadata": "e78c4e7ae95627e80e4262b43c392905397227b7a23e7ce2ec140ad8ea65c040",
          "withoutMetadata": "007286fa23e50156a1d51234c2ffe0cb0a4c1c8c672d0bb3c849095288cc7179",
          "linkedWithoutMetadata": "007286fa23e50156a1d51234c2ffe0cb0a4c1c8c672d0bb3c849095288cc7179"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getCurrentBlockTimestamp()",
          "getEthBalance(address)",
          "multicall(struct InterfaceMulticall.Call[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:14",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol:SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol:18",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:20",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:22",
        "version": {
          "withMetadata": "30a1430c38ef554db3378f9b58aefe7944bcc8602be235f33d07fac941985304",
          "withoutMetadata": "5fffbdf9f691b23b94f16f0ae221e27af0cc297ba8bc1848ab55bedf3dfb612a",
          "linkedWithoutMetadata": "5fffbdf9f691b23b94f16f0ae221e27af0cc297ba8bc1848ab55bedf3dfb612a"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol:SafeMathUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol:EnumerableSetUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/EnumerableMapUpgradeable.sol:EnumerableMapUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable"
        ],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "baseURI()",
          "tokenOfOwnerByIndex(address,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "incorrect-initializer-order",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:96",
            "expectedLinearization": [
              "ContextUpgradeable",
              "ERC165Upgradeable"
            ],
            "foundOrder": [
              "ERC165Upgradeable"
            ]
          },
          {
            "kind": "missing-initializer-call",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:94",
            "parentContracts": [
              "ContextUpgradeable"
            ]
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_holderTokens",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_struct(UintSet)2919_storage)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenOwners",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(UintToAddressMap)2296_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
            },
            {
              "label": "_baseURI",
              "offset": 0,
              "slot": "109",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "110",
              "type": "t_array(t_uint256)41_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(MapEntry)1970_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]",
              "numberOfBytes": "1312"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintSet)2919_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Map)1978_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)1970_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(MapEntry)1970_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2533_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintSet)2919_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2533_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintToAddressMap)2296_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)1978_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:11",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:11",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:10",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:8",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/utils/EnumerableMapUpgradeable.sol:EnumerableMapUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/EnumerableMapUpgradeable.sol:29",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol:EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol:29",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:8",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:18",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin/contracts/cryptography/ECDSA.sol:11",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/drafts/EIP712.sol:EIP712": {
        "src": "@openzeppelin/contracts/drafts/EIP712.sol:24",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "@openzeppelin/contracts/drafts/EIP712.sol:48"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_CACHED_DOMAIN_SEPARATOR",
            "src": "@openzeppelin/contracts/drafts/EIP712.sol:28"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_CACHED_CHAIN_ID",
            "src": "@openzeppelin/contracts/drafts/EIP712.sol:29"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_HASHED_NAME",
            "src": "@openzeppelin/contracts/drafts/EIP712.sol:31"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_HASHED_VERSION",
            "src": "@openzeppelin/contracts/drafts/EIP712.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_TYPE_HASH",
            "src": "@openzeppelin/contracts/drafts/EIP712.sol:33"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/drafts/ERC20Permit.sol:ERC20Permit": {
        "src": "@openzeppelin/contracts/drafts/ERC20Permit.sol:21",
        "inherit": [
          "@openzeppelin/contracts/drafts/EIP712.sol:EIP712",
          "@openzeppelin/contracts/drafts/IERC20Permit.sol:IERC20Permit",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Counters.sol:Counters",
          "@openzeppelin/contracts/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Permit",
            "src": "@openzeppelin/contracts/drafts/ERC20Permit.sol:34"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_PERMIT_TYPEHASH",
            "src": "@openzeppelin/contracts/drafts/ERC20Permit.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:44"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(Counter)5597_storage)",
              "contract": "ERC20Permit",
              "src": "@openzeppelin/contracts/drafts/ERC20Permit.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)5597_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5597_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/drafts/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/drafts/IERC20Permit.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/math/SafeMath.sol:18",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/math/SignedSafeMath.sol:SignedSafeMath": {
        "src": "@openzeppelin/contracts/math/SignedSafeMath.sol:9",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/proxy/ProxyAdmin.sol:ProxyAdmin": {
        "src": "@openzeppelin/contracts/proxy/ProxyAdmin.sol:12",
        "version": {
          "withMetadata": "7aedccfe29120f9e2333e56d0e49a4535c8908f488157588c5399ab5587d9ba9",
          "withoutMetadata": "a71d35c5edd9fdeb9b2688d363fa9eb2e5423d3d9a3db6bb3347b1dfb87b549f",
          "linkedWithoutMetadata": "a71d35c5edd9fdeb9b2688d363fa9eb2e5423d3d9a3db6bb3347b1dfb87b549f"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/proxy/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/TransparentUpgradeableProxy.sol:28",
        "version": {
          "withMetadata": "e4874ea0268e346478ed69816c1948b429bd4593fe11e0e0115c152b308829d5",
          "withoutMetadata": "e4874ea0268e346478ed69816c1948b429bd4593fe11e0e0115c152b308829d5",
          "linkedWithoutMetadata": "e4874ea0268e346478ed69816c1948b429bd4593fe11e0e0115c152b308829d5"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/UpgradeableProxy.sol:UpgradeableProxy",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin/contracts/proxy/TransparentUpgradeableProxy.sol:33"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/proxy/UpgradeableProxy.sol:UpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/UpgradeableProxy.sol:17",
        "version": {
          "withMetadata": "5417c9323c9bf9fff64e707c2083f3f9056e22ac2aec09c379a64bcd3654c4bc",
          "withoutMetadata": "5417c9323c9bf9fff64e707c2083f3f9056e22ac2aec09c379a64bcd3654c4bc",
          "linkedWithoutMetadata": "5417c9323c9bf9fff64e707c2083f3f9056e22ac2aec09c379a64bcd3654c4bc"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableProxy",
            "src": "@openzeppelin/contracts/proxy/UpgradeableProxy.sol:24"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:33",
        "version": {
          "withMetadata": "212ac22d2f3e99ea043c992161e6196a278f3cc172d8daed19f38fad3638e3d1",
          "withoutMetadata": "0aa97781f32e9c785d428eb05ff46374d4e97a5d614761e67c663b87da60fc7e",
          "linkedWithoutMetadata": "0aa97781f32e9c785d428eb05ff46374d4e97a5d614761e67c663b87da60fc7e"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:8",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:18",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/math/SafeMath.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:8",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/IFactory.sol:IFactory": {
        "src": "@surge/surge-core/contracts/interfaces/IFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "feeAmountTickSpacing(uint24)",
          "getPool(address,address,uint24)",
          "createPool(address,address,uint24)",
          "setOwner(address)",
          "enableFeeAmount(uint24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/IPool.sol:IPool": {
        "src": "@surge/surge-core/contracts/interfaces/IPool.sol:15",
        "inherit": [
          "@surge/surge-core/contracts/interfaces/pool/IPoolEvents.sol:IPoolEvents",
          "@surge/surge-core/contracts/interfaces/pool/IPoolOwnerActions.sol:IPoolOwnerActions",
          "@surge/surge-core/contracts/interfaces/pool/IPoolActions.sol:IPoolActions",
          "@surge/surge-core/contracts/interfaces/pool/IPoolDerivedState.sol:IPoolDerivedState",
          "@surge/surge-core/contracts/interfaces/pool/IPoolState.sol:IPoolState",
          "@surge/surge-core/contracts/interfaces/pool/IPoolImmutables.sol:IPoolImmutables"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/callback/IFlashCallback.sol:IFlashCallback": {
        "src": "@surge/surge-core/contracts/interfaces/callback/IFlashCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "flashCallback(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/callback/IMintCallback.sol:IMintCallback": {
        "src": "@surge/surge-core/contracts/interfaces/callback/IMintCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mintCallback(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/callback/ISwapCallback.sol:ISwapCallback": {
        "src": "@surge/surge-core/contracts/interfaces/callback/ISwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolActions.sol:IPoolActions": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(uint160)",
          "mint(address,int24,int24,uint128,bytes)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "swap(address,bool,int256,uint160,bytes)",
          "flash(address,uint256,uint256,bytes)",
          "increaseObservationCardinalityNext(uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolDerivedState.sol:IPoolDerivedState": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolDerivedState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "observe(uint32[])",
          "snapshotCumulativesInside(int24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolEvents.sol:IPoolEvents": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolImmutables.sol:IPoolImmutables": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolImmutables.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "token0()",
          "token1()",
          "fee()",
          "tickSpacing()",
          "maxLiquidityPerTick()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolOwnerActions.sol:IPoolOwnerActions": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolOwnerActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setFeeProtocol(uint8,uint8)",
          "collectProtocol(address,uint128,uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/interfaces/pool/IPoolState.sol:IPoolState": {
        "src": "@surge/surge-core/contracts/interfaces/pool/IPoolState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "slot0()",
          "feeGrowthGlobal0X128()",
          "feeGrowthGlobal1X128()",
          "protocolFees()",
          "liquidity()",
          "ticks(int24)",
          "tickBitmap(int16)",
          "positions(bytes32)",
          "observations(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/libraries/BitMath.sol:BitMath": {
        "src": "@surge/surge-core/contracts/libraries/BitMath.sol:6",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/libraries/FixedPoint128.sol:FixedPoint128": {
        "src": "@surge/surge-core/contracts/libraries/FixedPoint128.sol:6",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/libraries/FixedPoint96.sol:FixedPoint96": {
        "src": "@surge/surge-core/contracts/libraries/FixedPoint96.sol:7",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/libraries/FullMath.sol:FullMath": {
        "src": "@surge/surge-core/contracts/libraries/FullMath.sol:7",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/libraries/LiquidityMath.sol:LiquidityMath": {
        "src": "@surge/surge-core/contracts/libraries/LiquidityMath.sol:5",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/libraries/LowGasSafeMath.sol:LowGasSafeMath": {
        "src": "@surge/surge-core/contracts/libraries/LowGasSafeMath.sol:6",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/libraries/SafeCast.sol:SafeCast": {
        "src": "@surge/surge-core/contracts/libraries/SafeCast.sol:6",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/libraries/Tick.sol:Tick": {
        "src": "@surge/surge-core/contracts/libraries/Tick.sol:12",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [
          "@surge/surge-core/contracts/libraries/LowGasSafeMath.sol:LowGasSafeMath",
          "@surge/surge-core/contracts/libraries/SafeCast.sol:SafeCast",
          "@surge/surge-core/contracts/libraries/LiquidityMath.sol:LiquidityMath",
          "@surge/surge-core/contracts/libraries/TickMath.sol:TickMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/libraries/TickBitmap.sol:TickBitmap": {
        "src": "@surge/surge-core/contracts/libraries/TickBitmap.sol:9",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [
          "@surge/surge-core/contracts/libraries/BitMath.sol:BitMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/libraries/TickMath.sol:TickMath": {
        "src": "@surge/surge-core/contracts/libraries/TickMath.sol:7",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "@surge/surge-core/contracts/libraries/UnsafeMath.sol:UnsafeMath": {
        "src": "@surge/surge-core/contracts/libraries/UnsafeMath.sol:6",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "base64-sol/base64.sol:Base64": {
        "src": "base64-sol/base64.sol:6",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/Migrator.sol:Migrator": {
        "src": "contracts/Migrator.sol:22",
        "version": {
          "withMetadata": "b84fcda5d1619f2118c5cc3819836f2ff4722430f4c10ff0e552ac751bd14dfe",
          "withoutMetadata": "84d11ec94beaa15877434fea9c2ab301a8deca908b57689a4ad8f69b95b87d1c",
          "linkedWithoutMetadata": "84d11ec94beaa15877434fea9c2ab301a8deca908b57689a4ad8f69b95b87d1c"
        },
        "inherit": [
          "contracts/base/SelfPermit.sol:SelfPermit",
          "contracts/base/Multicall.sol:Multicall",
          "contracts/base/PoolInitializer.sol:PoolInitializer",
          "contracts/base/PeripheryImmutableState.sol:PeripheryImmutableState",
          "contracts/interfaces/IMigrator.sol:IMigrator",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable",
          "contracts/interfaces/IPeripheryImmutableState.sol:IPeripheryImmutableState",
          "contracts/interfaces/IPoolInitializer.sol:IPoolInitializer",
          "contracts/interfaces/ISelfPermit.sol:ISelfPermit",
          "contracts/interfaces/IMulticall.sol:IMulticall"
        ],
        "libraries": [
          "@surge/surge-core/contracts/libraries/LowGasSafeMath.sol:LowGasSafeMath",
          "contracts/libraries/TransferHelper.sol:TransferHelper"
        ],
        "methods": [
          "initialize(address,address,address)",
          "()",
          "migrate((address,uint256,uint8,address,address,uint24,int24,int24,uint256,uint256,address,uint256,bool))"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/base/Multicall.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "factory",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:12"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:14"
            },
            {
              "label": "nonfungiblePositionManager",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "Migrator",
              "src": "contracts/Migrator.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/SwapRouter.sol:SwapRouter": {
        "src": "contracts/SwapRouter.sol:24",
        "version": {
          "withMetadata": "5a2ede77ef2bf31660f4b6fd8342634eb6d05793a2c67acf465ce741c1eaabb3",
          "withoutMetadata": "2afd2e59674361bd3cce941f11b93a3cd2b07c2a8998916abf4bf4c1e1a5a8ee",
          "linkedWithoutMetadata": "2afd2e59674361bd3cce941f11b93a3cd2b07c2a8998916abf4bf4c1e1a5a8ee"
        },
        "inherit": [
          "contracts/base/SelfPermit.sol:SelfPermit",
          "contracts/interfaces/ISelfPermit.sol:ISelfPermit",
          "contracts/base/Multicall.sol:Multicall",
          "contracts/interfaces/IMulticall.sol:IMulticall",
          "contracts/base/PeripheryPaymentsWithFee.sol:PeripheryPaymentsWithFee",
          "contracts/interfaces/IPeripheryPaymentsWithFee.sol:IPeripheryPaymentsWithFee",
          "contracts/base/PeripheryPayments.sol:PeripheryPayments",
          "contracts/base/PeripheryValidation.sol:PeripheryValidation",
          "contracts/base/PeripheryImmutableState.sol:PeripheryImmutableState",
          "contracts/base/BlockTimestamp.sol:BlockTimestamp",
          "contracts/interfaces/ISwapRouter.sol:ISwapRouter",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable",
          "contracts/interfaces/IPeripheryImmutableState.sol:IPeripheryImmutableState",
          "contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments",
          "@surge/surge-core/contracts/interfaces/callback/ISwapCallback.sol:ISwapCallback"
        ],
        "libraries": [
          "contracts/libraries/Path.sol:Path",
          "@surge/surge-core/contracts/libraries/SafeCast.sol:SafeCast",
          "contracts/libraries/CallbackValidation.sol:CallbackValidation",
          "contracts/libraries/PoolAddress.sol:PoolAddress",
          "@surge/surge-core/contracts/libraries/TickMath.sol:TickMath"
        ],
        "methods": [
          "initialize(address,address)",
          "swapCallback(int256,int256,bytes)",
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/base/Multicall.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "amountInCached",
            "src": "contracts/SwapRouter.sol:41"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "factory",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:12"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:14"
            },
            {
              "label": "amountInCached",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "SwapRouter",
              "src": "contracts/SwapRouter.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/base/BlockTimestamp.sol:BlockTimestamp": {
        "src": "contracts/base/BlockTimestamp.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/base/ERC721Permit.sol:ERC721Permit": {
        "src": "contracts/base/ERC721Permit.sol:16",
        "inherit": [
          "contracts/interfaces/IERC721Permit.sol:IERC721Permit",
          "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "contracts/base/BlockTimestamp.sol:BlockTimestamp",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "contracts/libraries/ChainId.sol:ChainId"
        ],
        "methods": [
          "DOMAIN_SEPARATOR()",
          "permit(address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            },
            {
              "label": "_supportedInterfaces",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_bytes4,t_bool)",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
            },
            {
              "label": "_holderTokens",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_struct(UintSet)2919_storage)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenOwners",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(UintToAddressMap)2296_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "106",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
            },
            {
              "label": "_baseURI",
              "offset": 0,
              "slot": "109",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "110",
              "type": "t_array(t_uint256)41_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
            },
            {
              "label": "nameHash",
              "offset": 0,
              "slot": "151",
              "type": "t_bytes32",
              "contract": "ERC721Permit",
              "src": "contracts/base/ERC721Permit.sol:21"
            },
            {
              "label": "versionHash",
              "offset": 0,
              "slot": "152",
              "type": "t_bytes32",
              "contract": "ERC721Permit",
              "src": "contracts/base/ERC721Permit.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(MapEntry)1970_storage)dyn_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)41_storage": {
              "label": "uint256[41]",
              "numberOfBytes": "1312"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintSet)2919_storage)": {
              "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Map)1978_storage": {
              "label": "struct EnumerableMapUpgradeable.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)1970_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(MapEntry)1970_storage": {
              "label": "struct EnumerableMapUpgradeable.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2533_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintSet)2919_storage": {
              "label": "struct EnumerableSetUpgradeable.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2533_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintToAddressMap)2296_storage": {
              "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)1978_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/base/LiquidityManagement.sol:LiquidityManagement": {
        "src": "contracts/base/LiquidityManagement.sol:18",
        "inherit": [
          "contracts/base/PeripheryPayments.sol:PeripheryPayments",
          "contracts/base/PeripheryImmutableState.sol:PeripheryImmutableState",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable",
          "contracts/interfaces/IPeripheryImmutableState.sol:IPeripheryImmutableState",
          "contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments",
          "@surge/surge-core/contracts/interfaces/callback/IMintCallback.sol:IMintCallback"
        ],
        "libraries": [
          "contracts/libraries/CallbackValidation.sol:CallbackValidation",
          "contracts/libraries/PoolAddress.sol:PoolAddress",
          "@surge/surge-core/contracts/libraries/TickMath.sol:TickMath",
          "contracts/libraries/LiquidityAmounts.sol:LiquidityAmounts"
        ],
        "methods": [
          "mintCallback(uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "factory",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:12"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/base/Multicall.sol:Multicall": {
        "src": "contracts/base/Multicall.sol:9",
        "inherit": [
          "contracts/interfaces/IMulticall.sol:IMulticall"
        ],
        "libraries": [],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/base/Multicall.sol:14"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/base/PeripheryImmutableState.sol:PeripheryImmutableState": {
        "src": "contracts/base/PeripheryImmutableState.sol:10",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable",
          "contracts/interfaces/IPeripheryImmutableState.sol:IPeripheryImmutableState"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "factory",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:12"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/base/PeripheryPayments.sol:PeripheryPayments": {
        "src": "contracts/base/PeripheryPayments.sol:13",
        "inherit": [
          "contracts/base/PeripheryImmutableState.sol:PeripheryImmutableState",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable",
          "contracts/interfaces/IPeripheryImmutableState.sol:IPeripheryImmutableState",
          "contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments"
        ],
        "libraries": [
          "contracts/libraries/TransferHelper.sol:TransferHelper"
        ],
        "methods": [
          "()",
          "unwrapWETH9(uint256,address)",
          "sweepToken(address,uint256,address)",
          "refundETH()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "factory",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:12"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/base/PeripheryPaymentsWithFee.sol:PeripheryPaymentsWithFee": {
        "src": "contracts/base/PeripheryPaymentsWithFee.sol:13",
        "inherit": [
          "contracts/interfaces/IPeripheryPaymentsWithFee.sol:IPeripheryPaymentsWithFee",
          "contracts/base/PeripheryPayments.sol:PeripheryPayments",
          "contracts/base/PeripheryImmutableState.sol:PeripheryImmutableState",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable",
          "contracts/interfaces/IPeripheryImmutableState.sol:IPeripheryImmutableState",
          "contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments"
        ],
        "libraries": [
          "@surge/surge-core/contracts/libraries/LowGasSafeMath.sol:LowGasSafeMath",
          "contracts/libraries/TransferHelper.sol:TransferHelper"
        ],
        "methods": [
          "unwrapWETH9WithFee(uint256,address,uint256,address)",
          "sweepTokenWithFee(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "factory",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:12"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/base/PeripheryValidation.sol:PeripheryValidation": {
        "src": "contracts/base/PeripheryValidation.sol:6",
        "inherit": [
          "contracts/base/BlockTimestamp.sol:BlockTimestamp"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/base/PoolInitializer.sol:PoolInitializer": {
        "src": "contracts/base/PoolInitializer.sol:11",
        "inherit": [
          "contracts/base/PeripheryImmutableState.sol:PeripheryImmutableState",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable",
          "contracts/interfaces/IPeripheryImmutableState.sol:IPeripheryImmutableState",
          "contracts/interfaces/IPoolInitializer.sol:IPoolInitializer"
        ],
        "libraries": [],
        "methods": [
          "createAndInitializePoolIfNecessary(address,address,uint24,uint160)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "factory",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:12"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/base/SelfPermit.sol:SelfPermit": {
        "src": "contracts/base/SelfPermit.sol:14",
        "inherit": [
          "contracts/interfaces/ISelfPermit.sol:ISelfPermit"
        ],
        "libraries": [],
        "methods": [
          "selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)",
          "selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)",
          "selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)",
          "selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/examples/PairFlash.sol:PairFlash": {
        "src": "contracts/examples/PairFlash.sol:17",
        "version": {
          "withMetadata": "6daa24f96c7fc887e9ee0117125f8c183b5cd42fd3cc07b8bc87a9bd57a77e4b",
          "withoutMetadata": "6daa24f96c7fc887e9ee0117125f8c183b5cd42fd3cc07b8bc87a9bd57a77e4b",
          "linkedWithoutMetadata": "6daa24f96c7fc887e9ee0117125f8c183b5cd42fd3cc07b8bc87a9bd57a77e4b"
        },
        "inherit": [
          "contracts/base/PeripheryPayments.sol:PeripheryPayments",
          "contracts/base/PeripheryImmutableState.sol:PeripheryImmutableState",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable",
          "contracts/interfaces/IPeripheryImmutableState.sol:IPeripheryImmutableState",
          "contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments",
          "@surge/surge-core/contracts/interfaces/callback/IFlashCallback.sol:IFlashCallback"
        ],
        "libraries": [
          "@surge/surge-core/contracts/libraries/LowGasSafeMath.sol:LowGasSafeMath",
          "contracts/libraries/CallbackValidation.sol:CallbackValidation",
          "contracts/libraries/TransferHelper.sol:TransferHelper",
          "contracts/libraries/PoolAddress.sol:PoolAddress"
        ],
        "methods": [
          "(address,address,address)",
          "flashCallback(uint256,uint256,bytes)",
          "initFlash((address,address,uint24,uint256,uint256,uint24,uint24))"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PairFlash",
            "src": "contracts/examples/PairFlash.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "swapRouter",
            "src": "contracts/examples/PairFlash.sol:21"
          },
          {
            "kind": "missing-initializer",
            "src": "contracts/examples/PairFlash.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "factory",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:12"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IERC20Metadata.sol:IERC20Metadata": {
        "src": "contracts/interfaces/IERC20Metadata.sol:9",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IERC721Permit.sol:IERC721Permit": {
        "src": "contracts/interfaces/IERC721Permit.sol:8",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "PERMIT_TYPEHASH()",
          "DOMAIN_SEPARATOR()",
          "permit(address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IMigrator.sol:IMigrator": {
        "src": "contracts/interfaces/IMigrator.sol:11",
        "inherit": [
          "contracts/interfaces/IPoolInitializer.sol:IPoolInitializer",
          "contracts/interfaces/ISelfPermit.sol:ISelfPermit",
          "contracts/interfaces/IMulticall.sol:IMulticall"
        ],
        "libraries": [],
        "methods": [
          "migrate((address,uint256,uint8,address,address,uint24,int24,int24,uint256,uint256,address,uint256,bool))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IMulticall.sol:IMulticall": {
        "src": "contracts/interfaces/IMulticall.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/INonfungiblePositionManager.sol:INonfungiblePositionManager": {
        "src": "contracts/interfaces/INonfungiblePositionManager.sol:16",
        "inherit": [
          "contracts/interfaces/IERC721Permit.sol:IERC721Permit",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol:IERC721EnumerableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "contracts/interfaces/IPeripheryImmutableState.sol:IPeripheryImmutableState",
          "contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments",
          "contracts/interfaces/IPoolInitializer.sol:IPoolInitializer"
        ],
        "libraries": [],
        "methods": [
          "positions(uint256)",
          "mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))",
          "increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))",
          "decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))",
          "collect((uint256,address,uint128,uint128))",
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/INonfungibleTokenPositionDescriptor.sol:INonfungibleTokenPositionDescriptor": {
        "src": "contracts/interfaces/INonfungibleTokenPositionDescriptor.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenURI(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IPair.sol:IPair": {
        "src": "contracts/interfaces/IPair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IPeripheryImmutableState.sol:IPeripheryImmutableState": {
        "src": "contracts/interfaces/IPeripheryImmutableState.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH9()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments": {
        "src": "contracts/interfaces/IPeripheryPayments.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "unwrapWETH9(uint256,address)",
          "refundETH()",
          "sweepToken(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IPeripheryPaymentsWithFee.sol:IPeripheryPaymentsWithFee": {
        "src": "contracts/interfaces/IPeripheryPaymentsWithFee.sol:8",
        "inherit": [
          "contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments"
        ],
        "libraries": [],
        "methods": [
          "unwrapWETH9WithFee(uint256,address,uint256,address)",
          "sweepTokenWithFee(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IPoolInitializer.sol:IPoolInitializer": {
        "src": "contracts/interfaces/IPoolInitializer.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createAndInitializePoolIfNecessary(address,address,uint24,uint160)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IQuoter.sol:IQuoter": {
        "src": "contracts/interfaces/IQuoter.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "quoteExactInput(bytes,uint256)",
          "quoteExactInputSingle(address,address,uint24,uint256,uint160)",
          "quoteExactOutput(bytes,uint256)",
          "quoteExactOutputSingle(address,address,uint24,uint256,uint160)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/IQuoterV2.sol:IQuoterV2": {
        "src": "contracts/interfaces/IQuoterV2.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "quoteExactInput(bytes,uint256)",
          "quoteExactInputSingle((address,address,uint256,uint24,uint160))",
          "quoteExactOutput(bytes,uint256)",
          "quoteExactOutputSingle((address,address,uint256,uint24,uint160))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/ISelfPermit.sol:ISelfPermit": {
        "src": "contracts/interfaces/ISelfPermit.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)",
          "selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)",
          "selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)",
          "selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "contracts/interfaces/ISwapRouter.sol:9",
        "inherit": [
          "@surge/surge-core/contracts/interfaces/callback/ISwapCallback.sol:ISwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/ITickLens.sol:ITickLens": {
        "src": "contracts/interfaces/ITickLens.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPopulatedTicksInWord(address,int16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/external/IERC1271.sol:IERC1271": {
        "src": "contracts/interfaces/external/IERC1271.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/external/IERC20PermitAllowed.sol:IERC20PermitAllowed": {
        "src": "contracts/interfaces/external/IERC20PermitAllowed.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/interfaces/external/IWETH9.sol:IWETH9": {
        "src": "contracts/interfaces/external/IWETH9.sol:7",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/lens/Quoter.sol:Quoter": {
        "src": "contracts/lens/Quoter.sol:22",
        "version": {
          "withMetadata": "c24c02e0f937d84f954ca95a9002ebf0c023721384f32b8e724379d360700908",
          "withoutMetadata": "47f8ebf2f83dae0b3c535b8d7a469a031efcd062589efd3ac4f2bbe730b7f46c",
          "linkedWithoutMetadata": "47f8ebf2f83dae0b3c535b8d7a469a031efcd062589efd3ac4f2bbe730b7f46c"
        },
        "inherit": [
          "contracts/base/PeripheryImmutableState.sol:PeripheryImmutableState",
          "@surge/surge-core/contracts/interfaces/callback/ISwapCallback.sol:ISwapCallback",
          "contracts/interfaces/IQuoter.sol:IQuoter",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable",
          "contracts/interfaces/IPeripheryImmutableState.sol:IPeripheryImmutableState"
        ],
        "libraries": [
          "contracts/libraries/Path.sol:Path",
          "@surge/surge-core/contracts/libraries/SafeCast.sol:SafeCast",
          "contracts/libraries/CallbackValidation.sol:CallbackValidation",
          "contracts/libraries/PoolAddress.sol:PoolAddress",
          "@surge/surge-core/contracts/libraries/TickMath.sol:TickMath"
        ],
        "methods": [
          "initialize(address,address)",
          "swapCallback(int256,int256,bytes)",
          "quoteExactInputSingle(address,address,uint24,uint256,uint160)",
          "quoteExactInput(bytes,uint256)",
          "quoteExactOutputSingle(address,address,uint24,uint256,uint160)",
          "quoteExactOutput(bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "factory",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:12"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:14"
            },
            {
              "label": "amountOutCached",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Quoter",
              "src": "contracts/lens/Quoter.sol:27"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/lens/QuoterV2.sol:QuoterV2": {
        "src": "contracts/lens/QuoterV2.sol:24",
        "version": {
          "withMetadata": "48dd5ebd46a815e5e558b1296584a45aa7b0f37377da7b098164c1daf3f40509",
          "withoutMetadata": "3ae0c1ec78f8fb5bf95699551c489cae3909a4cd6036178b8a7869f6c79ca70f",
          "linkedWithoutMetadata": "3ae0c1ec78f8fb5bf95699551c489cae3909a4cd6036178b8a7869f6c79ca70f"
        },
        "inherit": [
          "contracts/base/PeripheryImmutableState.sol:PeripheryImmutableState",
          "@surge/surge-core/contracts/interfaces/callback/ISwapCallback.sol:ISwapCallback",
          "contracts/interfaces/IQuoterV2.sol:IQuoterV2",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable",
          "contracts/interfaces/IPeripheryImmutableState.sol:IPeripheryImmutableState"
        ],
        "libraries": [
          "contracts/libraries/Path.sol:Path",
          "@surge/surge-core/contracts/libraries/SafeCast.sol:SafeCast",
          "contracts/libraries/PoolTicksCounter.sol:PoolTicksCounter",
          "contracts/libraries/CallbackValidation.sol:CallbackValidation",
          "contracts/libraries/PoolAddress.sol:PoolAddress",
          "@surge/surge-core/contracts/libraries/TickMath.sol:TickMath"
        ],
        "methods": [
          "initialize(address,address)",
          "swapCallback(int256,int256,bytes)",
          "quoteExactInputSingle((address,address,uint256,uint24,uint160))",
          "quoteExactInput(bytes,uint256)",
          "quoteExactOutputSingle((address,address,uint256,uint24,uint160))",
          "quoteExactOutput(bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "factory",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:12"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:14"
            },
            {
              "label": "amountOutCached",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "QuoterV2",
              "src": "contracts/lens/QuoterV2.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/lens/TickLens.sol:TickLens": {
        "src": "contracts/lens/TickLens.sol:10",
        "version": {
          "withMetadata": "e861b258dad5b5a06245de5796cd90b73cbcbeba98ca7045ead937a977a055e9",
          "withoutMetadata": "9c841c97c855329760522b0cbbd36980a3668dfc04243c918e7a07d0b4922de1",
          "linkedWithoutMetadata": "9c841c97c855329760522b0cbbd36980a3668dfc04243c918e7a07d0b4922de1"
        },
        "inherit": [
          "contracts/interfaces/ITickLens.sol:ITickLens"
        ],
        "libraries": [],
        "methods": [
          "getPopulatedTicksInWord(address,int16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/AddressStringUtil.sol:AddressStringUtil": {
        "src": "contracts/libraries/AddressStringUtil.sol:4",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/BytesLib.sol:BytesLib": {
        "src": "contracts/libraries/BytesLib.sol:11",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/CallbackValidation.sol:CallbackValidation": {
        "src": "contracts/libraries/CallbackValidation.sol:8",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/PoolAddress.sol:PoolAddress"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/ChainId.sol:ChainId": {
        "src": "contracts/libraries/ChainId.sol:5",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/HexStrings.sol:HexStrings": {
        "src": "contracts/libraries/HexStrings.sol:4",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/LiquidityAmounts.sol:LiquidityAmounts": {
        "src": "contracts/libraries/LiquidityAmounts.sol:9",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [
          "@surge/surge-core/contracts/libraries/FixedPoint96.sol:FixedPoint96",
          "@surge/surge-core/contracts/libraries/FullMath.sol:FullMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/NFTSVG.sol:NFTSVG": {
        "src": "contracts/libraries/NFTSVG.sol:10",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "base64-sol/base64.sol:Base64",
          "@surge/surge-core/contracts/libraries/BitMath.sol:BitMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/OracleLibrary.sol:OracleLibrary": {
        "src": "contracts/libraries/OracleLibrary.sol:10",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [
          "@surge/surge-core/contracts/libraries/TickMath.sol:TickMath",
          "@surge/surge-core/contracts/libraries/FullMath.sol:FullMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/Path.sol:Path": {
        "src": "contracts/libraries/Path.sol:7",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/BytesLib.sol:BytesLib"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/PoolAddress.sol:PoolAddress": {
        "src": "contracts/libraries/PoolAddress.sol:7",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/PoolTicksCounter.sol:PoolTicksCounter": {
        "src": "contracts/libraries/PoolTicksCounter.sol:6",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/PositionKey.sol:PositionKey": {
        "src": "contracts/libraries/PositionKey.sol:4",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/PositionValue.sol:PositionValue": {
        "src": "contracts/libraries/PositionValue.sol:14",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/LiquidityAmounts.sol:LiquidityAmounts",
          "@surge/surge-core/contracts/libraries/TickMath.sol:TickMath",
          "contracts/libraries/PoolAddress.sol:PoolAddress",
          "@surge/surge-core/contracts/libraries/FixedPoint128.sol:FixedPoint128",
          "@surge/surge-core/contracts/libraries/FullMath.sol:FullMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/SafeERC20Namer.sol:SafeERC20Namer": {
        "src": "contracts/libraries/SafeERC20Namer.sol:8",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/AddressStringUtil.sol:AddressStringUtil"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/SqrtPriceMathPartial.sol:SqrtPriceMathPartial": {
        "src": "contracts/libraries/SqrtPriceMathPartial.sol:11",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [
          "@surge/surge-core/contracts/libraries/FixedPoint96.sol:FixedPoint96",
          "@surge/surge-core/contracts/libraries/UnsafeMath.sol:UnsafeMath",
          "@surge/surge-core/contracts/libraries/FullMath.sol:FullMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/TokenRatioSortOrder.sol:TokenRatioSortOrder": {
        "src": "contracts/libraries/TokenRatioSortOrder.sol:4",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libraries/TransferHelper.sol:TransferHelper": {
        "src": "contracts/libraries/TransferHelper.sol:6",
        "version": {
          "withMetadata": "fbfa975909662a4405db51d672a4c55fedcd4bdfa5c2983a96d66ad195c1347b",
          "withoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66",
          "linkedWithoutMetadata": "003460f82de9b4443b3210511223958735ef1e0acef08c338160fc451f45ca66"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/Base64Test.sol:Base64Test": {
        "src": "contracts/test/Base64Test.sol:6",
        "version": {
          "withMetadata": "4123a3b3ff19a74bf777cc938a9da7b77564867b71b4e93f7c2b9f6d1a350d24",
          "withoutMetadata": "756b5670d0aff6adb14af45e3c744bb5177df1f80a32de43d7db8d394f6e4149",
          "linkedWithoutMetadata": "756b5670d0aff6adb14af45e3c744bb5177df1f80a32de43d7db8d394f6e4149"
        },
        "inherit": [],
        "libraries": [
          "base64-sol/base64.sol:Base64"
        ],
        "methods": [
          "encode(bytes)",
          "getGasCostOfEncode(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/LiquidityAmountsTest.sol:LiquidityAmountsTest": {
        "src": "contracts/test/LiquidityAmountsTest.sol:6",
        "version": {
          "withMetadata": "72763f68be49d9a2649c73e2caaa5ed4e9fec775cf757ab02234fb0372266479",
          "withoutMetadata": "59c51d3764ecf6ffb5bb53b9392c17cc987074c48d595417e91602f0e354d95e",
          "linkedWithoutMetadata": "59c51d3764ecf6ffb5bb53b9392c17cc987074c48d595417e91602f0e354d95e"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/LiquidityAmounts.sol:LiquidityAmounts"
        ],
        "methods": [
          "getLiquidityForAmount0(uint160,uint160,uint256)",
          "getGasCostOfGetLiquidityForAmount0(uint160,uint160,uint256)",
          "getLiquidityForAmount1(uint160,uint160,uint256)",
          "getGasCostOfGetLiquidityForAmount1(uint160,uint160,uint256)",
          "getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256)",
          "getGasCostOfGetLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256)",
          "getAmount0ForLiquidity(uint160,uint160,uint128)",
          "getGasCostOfGetAmount0ForLiquidity(uint160,uint160,uint128)",
          "getAmount1ForLiquidity(uint160,uint160,uint128)",
          "getGasCostOfGetAmount1ForLiquidity(uint160,uint160,uint128)",
          "getAmountsForLiquidity(uint160,uint160,uint160,uint128)",
          "getGasCostOfGetAmountsForLiquidity(uint160,uint160,uint160,uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/MockTimeSwapRouter.sol:MockTimeSwapRouter": {
        "src": "contracts/test/MockTimeSwapRouter.sol:7",
        "version": {
          "withMetadata": "e6d5bca55c324d5b8f9cd3ac452103b3a373657ab15b490a013f4e0290b88477",
          "withoutMetadata": "e6d5bca55c324d5b8f9cd3ac452103b3a373657ab15b490a013f4e0290b88477",
          "linkedWithoutMetadata": "e6d5bca55c324d5b8f9cd3ac452103b3a373657ab15b490a013f4e0290b88477"
        },
        "inherit": [
          "contracts/SwapRouter.sol:SwapRouter",
          "contracts/base/SelfPermit.sol:SelfPermit",
          "contracts/interfaces/ISelfPermit.sol:ISelfPermit",
          "contracts/base/Multicall.sol:Multicall",
          "contracts/interfaces/IMulticall.sol:IMulticall",
          "contracts/base/PeripheryPaymentsWithFee.sol:PeripheryPaymentsWithFee",
          "contracts/interfaces/IPeripheryPaymentsWithFee.sol:IPeripheryPaymentsWithFee",
          "contracts/base/PeripheryPayments.sol:PeripheryPayments",
          "contracts/base/PeripheryValidation.sol:PeripheryValidation",
          "contracts/base/PeripheryImmutableState.sol:PeripheryImmutableState",
          "contracts/base/BlockTimestamp.sol:BlockTimestamp",
          "contracts/interfaces/ISwapRouter.sol:ISwapRouter",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable",
          "contracts/interfaces/IPeripheryImmutableState.sol:IPeripheryImmutableState",
          "contracts/interfaces/IPeripheryPayments.sol:IPeripheryPayments",
          "@surge/surge-core/contracts/interfaces/callback/ISwapCallback.sol:ISwapCallback"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "setTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockTimeSwapRouter",
            "src": "contracts/test/MockTimeSwapRouter.sol:10"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/base/Multicall.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "factory",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:12"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:14"
            },
            {
              "label": "amountInCached",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "SwapRouter",
              "src": "contracts/SwapRouter.sol:41"
            },
            {
              "label": "time",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "MockTimeSwapRouter",
              "src": "contracts/test/MockTimeSwapRouter.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/NonfungiblePositionManagerPositionsGasTest.sol:NonfungiblePositionManagerPositionsGasTest": {
        "src": "contracts/test/NonfungiblePositionManagerPositionsGasTest.sol:6",
        "version": {
          "withMetadata": "c44c6ac93712084e0807c997f773550d4fa427cad8460979fa8fd0a26d423422",
          "withoutMetadata": "162595d5f633ff3b93b80b746cad7d12176a7fd8048b26fb58ef505eadf46f8e",
          "linkedWithoutMetadata": "162595d5f633ff3b93b80b746cad7d12176a7fd8048b26fb58ef505eadf46f8e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "getGasCostOfPositions(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NonfungiblePositionManagerPositionsGasTest",
            "src": "contracts/test/NonfungiblePositionManagerPositionsGasTest.sol:9"
          },
          {
            "kind": "state-variable-immutable",
            "name": "nonfungiblePositionManager",
            "src": "contracts/test/NonfungiblePositionManagerPositionsGasTest.sol:7"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/OracleTest.sol:OracleTest": {
        "src": "contracts/test/OracleTest.sol:7",
        "version": {
          "withMetadata": "fadaaa7ce279dd22486821b874fd0b212a537a5d998df7f222885dd13783e875",
          "withoutMetadata": "7d7842e2764aff898624f3414ae91d16f2676d1e4f16e9bf339d0bb504936d10",
          "linkedWithoutMetadata": "7d7842e2764aff898624f3414ae91d16f2676d1e4f16e9bf339d0bb504936d10"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/OracleLibrary.sol:OracleLibrary"
        ],
        "methods": [
          "consult(address,uint32)",
          "getQuoteAtTick(int24,uint128,address,address)",
          "getGasCostOfConsult(address,uint32)",
          "getGasCostOfGetQuoteAtTick(int24,uint128,address,address)",
          "getOldestObservationSecondsAgo(address)",
          "getBlockStartingTickAndLiquidity(address)",
          "getWeightedArithmeticMeanTick(struct OracleLibrary.WeightedTickData[])",
          "getChainedPrice(address[],int24[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/PathTest.sol:PathTest": {
        "src": "contracts/test/PathTest.sol:6",
        "version": {
          "withMetadata": "2a4f21f6de4f47f711411db814d70cbacbd160195c4d453b28661bb1fe37adc9",
          "withoutMetadata": "30bd875e4adbf51712054f3731f91bf1c69b57cc2ba3253da8dd9e347c532221",
          "linkedWithoutMetadata": "30bd875e4adbf51712054f3731f91bf1c69b57cc2ba3253da8dd9e347c532221"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/Path.sol:Path"
        ],
        "methods": [
          "hasMultiplePools(bytes)",
          "decodeFirstPool(bytes)",
          "getFirstPool(bytes)",
          "skipToken(bytes)",
          "getGasCostOfDecodeFirstPool(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/PeripheryImmutableStateTest.sol:PeripheryImmutableStateTest": {
        "src": "contracts/test/PeripheryImmutableStateTest.sol:6",
        "version": {
          "withMetadata": "b4d01d411494cab4a363fed7060f97f043e42859029cb09830fda13c4467d685",
          "withoutMetadata": "b4d01d411494cab4a363fed7060f97f043e42859029cb09830fda13c4467d685",
          "linkedWithoutMetadata": "b4d01d411494cab4a363fed7060f97f043e42859029cb09830fda13c4467d685"
        },
        "inherit": [
          "contracts/base/PeripheryImmutableState.sol:PeripheryImmutableState",
          "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:Initializable",
          "contracts/interfaces/IPeripheryImmutableState.sol:IPeripheryImmutableState"
        ],
        "libraries": [],
        "methods": [
          "(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PeripheryImmutableStateTest",
            "src": "contracts/test/PeripheryImmutableStateTest.sol:7"
          },
          {
            "kind": "missing-initializer",
            "src": "contracts/test/PeripheryImmutableStateTest.sol:6"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
            },
            {
              "label": "factory",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:12"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "PeripheryImmutableState",
              "src": "contracts/base/PeripheryImmutableState.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/PoolAddressTest.sol:PoolAddressTest": {
        "src": "contracts/test/PoolAddressTest.sol:6",
        "version": {
          "withMetadata": "b4118638ea0881f0d0787a95e1f4faa34e5f4fdeb73277f5a68c71f4e6181fae",
          "withoutMetadata": "d21ec40e5fb2697a9e08002dbe91a455999c69e37c2b5df12d9b0b873d9b5aea",
          "linkedWithoutMetadata": "d21ec40e5fb2697a9e08002dbe91a455999c69e37c2b5df12d9b0b873d9b5aea"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/PoolAddress.sol:PoolAddress"
        ],
        "methods": [
          "computeAddress(address,address,address,uint24)",
          "getGasCostOfComputeAddress(address,address,address,uint24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/PoolTicksCounterTest.sol:PoolTicksCounterTest": {
        "src": "contracts/test/PoolTicksCounterTest.sol:8",
        "version": {
          "withMetadata": "ad3c907a994ba6a54784f808f7394394b7028a863710e06ddfb23eeed201726c",
          "withoutMetadata": "26d54811950fc44d710c13a963fedb9183604c9c4c911b9a9668566601e2ca66",
          "linkedWithoutMetadata": "26d54811950fc44d710c13a963fedb9183604c9c4c911b9a9668566601e2ca66"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/PoolTicksCounter.sol:PoolTicksCounter"
        ],
        "methods": [
          "countInitializedTicksCrossed(address,int24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/PositionValueTest.sol:PositionValueTest": {
        "src": "contracts/test/PositionValueTest.sol:7",
        "version": {
          "withMetadata": "1a267aaf72901ec336902258b6b14f2e96f3835d3f3a5558bdba9edf5b9070bf",
          "withoutMetadata": "fb99b001633f5529ee04499c6e3d40bb5f9a4e78c9ffceae0538ad48e5f73fce",
          "linkedWithoutMetadata": "fb99b001633f5529ee04499c6e3d40bb5f9a4e78c9ffceae0538ad48e5f73fce"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/PositionValue.sol:PositionValue"
        ],
        "methods": [
          "total(address,uint256,uint160)",
          "principal(address,uint256,uint160)",
          "fees(address,uint256)",
          "totalGas(address,uint256,uint160)",
          "principalGas(address,uint256,uint160)",
          "feesGas(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/SelfPermitTest.sol:SelfPermitTest": {
        "src": "contracts/test/SelfPermitTest.sol:7",
        "version": {
          "withMetadata": "eb6def75880a0a119a8afc5acbe0891d46da664f39e807ae38744f5f62a2564f",
          "withoutMetadata": "3366abf91d0038624260aad054a1832a67fe1b07ad21d59513b660fa4c2a5486",
          "linkedWithoutMetadata": "3366abf91d0038624260aad054a1832a67fe1b07ad21d59513b660fa4c2a5486"
        },
        "inherit": [
          "contracts/base/SelfPermit.sol:SelfPermit",
          "contracts/interfaces/ISelfPermit.sol:ISelfPermit"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TestCallbackValidation.sol:TestCallbackValidation": {
        "src": "contracts/test/TestCallbackValidation.sol:6",
        "version": {
          "withMetadata": "321fe1dc6bcb1ffe919cd4dc645eb07e4cd3e46e0e65318130231d37eebe15d6",
          "withoutMetadata": "f39359216797f8d44d7ceebe2296862ec9629c8fe8bbd007a580d67248440c26",
          "linkedWithoutMetadata": "f39359216797f8d44d7ceebe2296862ec9629c8fe8bbd007a580d67248440c26"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/CallbackValidation.sol:CallbackValidation"
        ],
        "methods": [
          "verifyCallback(address,address,address,uint24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TestCallee.sol:TestCallee": {
        "src": "contracts/test/TestCallee.sol:9",
        "version": {
          "withMetadata": "0f771a182e93b0c444ce4c1b3803ab5386431db5a1a9caa9ffe343ca99dce7e3",
          "withoutMetadata": "083ffbb94fcd2295ac401a92fdc2f5c7f2aa15f41304c8a57f9eba9deb56db13",
          "linkedWithoutMetadata": "083ffbb94fcd2295ac401a92fdc2f5c7f2aa15f41304c8a57f9eba9deb56db13"
        },
        "inherit": [
          "@surge/surge-core/contracts/interfaces/callback/ISwapCallback.sol:ISwapCallback"
        ],
        "libraries": [
          "@surge/surge-core/contracts/libraries/SafeCast.sol:SafeCast"
        ],
        "methods": [
          "swapExact0For1(address,uint256,address,uint160)",
          "swap0ForExact1(address,uint256,address,uint160)",
          "swapExact1For0(address,uint256,address,uint160)",
          "swap1ForExact0(address,uint256,address,uint160)",
          "swapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TestERC20.sol:TestERC20": {
        "src": "contracts/test/TestERC20.sol:6",
        "version": {
          "withMetadata": "034661a920c063ac60cf4b0104d82798efca9a4374f5f06412de62a4494b1bcf",
          "withoutMetadata": "17ff8cad29095e3363a640896570dedc4cfaed1b823cf7a8b6d64a2779b3e2f3",
          "linkedWithoutMetadata": "17ff8cad29095e3363a640896570dedc4cfaed1b823cf7a8b6d64a2779b3e2f3"
        },
        "inherit": [
          "@openzeppelin/contracts/drafts/ERC20Permit.sol:ERC20Permit",
          "@openzeppelin/contracts/drafts/EIP712.sol:EIP712",
          "@openzeppelin/contracts/drafts/IERC20Permit.sol:IERC20Permit",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TestERC20",
            "src": "contracts/test/TestERC20.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:44"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(Counter)5597_storage)",
              "contract": "ERC20Permit",
              "src": "@openzeppelin/contracts/drafts/ERC20Permit.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)5597_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5597_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TestERC20Metadata.sol:TestERC20Metadata": {
        "src": "contracts/test/TestERC20Metadata.sol:6",
        "version": {
          "withMetadata": "1036507327da42aa94573b990b341a2bccd514131eb9261b5ed3cdfb3163f4c7",
          "withoutMetadata": "45923fcb3d392c5d661ec1a310cd9344bdb588db33369836849913ef16c09eda",
          "linkedWithoutMetadata": "45923fcb3d392c5d661ec1a310cd9344bdb588db33369836849913ef16c09eda"
        },
        "inherit": [
          "@openzeppelin/contracts/drafts/ERC20Permit.sol:ERC20Permit",
          "@openzeppelin/contracts/drafts/EIP712.sol:EIP712",
          "@openzeppelin/contracts/drafts/IERC20Permit.sol:IERC20Permit",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TestERC20Metadata",
            "src": "contracts/test/TestERC20Metadata.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:44"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(Counter)5597_storage)",
              "contract": "ERC20Permit",
              "src": "@openzeppelin/contracts/drafts/ERC20Permit.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)5597_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5597_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TestERC20PermitAllowed.sol:TestERC20PermitAllowed": {
        "src": "contracts/test/TestERC20PermitAllowed.sol:8",
        "version": {
          "withMetadata": "28edd0fd16aabba86e90f395801351ca224fe75bd6242f50463ef4a9440504a5",
          "withoutMetadata": "dc07fffbdc82cb920c084043ca7e49ac245c772c30aa74949d720eef8ba9b7dd",
          "linkedWithoutMetadata": "dc07fffbdc82cb920c084043ca7e49ac245c772c30aa74949d720eef8ba9b7dd"
        },
        "inherit": [
          "contracts/interfaces/external/IERC20PermitAllowed.sol:IERC20PermitAllowed",
          "contracts/test/TestERC20.sol:TestERC20",
          "@openzeppelin/contracts/drafts/ERC20Permit.sol:ERC20Permit",
          "@openzeppelin/contracts/drafts/EIP712.sol:EIP712",
          "@openzeppelin/contracts/drafts/IERC20Permit.sol:IERC20Permit",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)",
          "permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TestERC20PermitAllowed",
            "src": "contracts/test/TestERC20PermitAllowed.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:44"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(Counter)5597_storage)",
              "contract": "ERC20Permit",
              "src": "@openzeppelin/contracts/drafts/ERC20Permit.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)5597_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5597_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TestMulticall.sol:TestMulticall": {
        "src": "contracts/test/TestMulticall.sol:7",
        "version": {
          "withMetadata": "1856160bb4f16466d5e6d80aa26d02f901a6a995376b859da10c45a9dcd93af7",
          "withoutMetadata": "0741646706aa6127a5f96997b83a0a1ee8ac5e8d359f837f1c2e5f1978c578a3",
          "linkedWithoutMetadata": "0741646706aa6127a5f96997b83a0a1ee8ac5e8d359f837f1c2e5f1978c578a3"
        },
        "inherit": [
          "contracts/base/Multicall.sol:Multicall",
          "contracts/interfaces/IMulticall.sol:IMulticall"
        ],
        "libraries": [],
        "methods": [
          "functionThatRevertsWithError(string)",
          "functionThatReturnsTuple(uint256,uint256)",
          "pays()",
          "returnSender()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/base/Multicall.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "paid",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "TestMulticall",
              "src": "contracts/test/TestMulticall.sol:21"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TestPositionNFTOwner.sol:TestPositionNFTOwner": {
        "src": "contracts/test/TestPositionNFTOwner.sol:6",
        "version": {
          "withMetadata": "1f49e38a9127a06fd398dae38aaed0608f89d247ad6010fde1e1458a08a38a62",
          "withoutMetadata": "aab42cf8405677556435825cac6027914fdec56f3fc61ae558520c9a2eaf6434",
          "linkedWithoutMetadata": "aab42cf8405677556435825cac6027914fdec56f3fc61ae558520c9a2eaf6434"
        },
        "inherit": [
          "contracts/interfaces/external/IERC1271.sol:IERC1271"
        ],
        "libraries": [],
        "methods": [
          "setOwner(address)",
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "TestPositionNFTOwner",
              "src": "contracts/test/TestPositionNFTOwner.sol:7"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/test/TickLensTest.sol:TickLensTest": {
        "src": "contracts/test/TickLensTest.sol:9",
        "version": {
          "withMetadata": "d1ff8e855fbcb3446c593a71789c94212f994b1ed3d782b9e6079d1b86d3f180",
          "withoutMetadata": "609f69984717367dc46dcd7043da41408695aaf75f6368309a48c89855c9ce05",
          "linkedWithoutMetadata": "609f69984717367dc46dcd7043da41408695aaf75f6368309a48c89855c9ce05"
        },
        "inherit": [
          "contracts/lens/TickLens.sol:TickLens",
          "contracts/interfaces/ITickLens.sol:ITickLens"
        ],
        "libraries": [],
        "methods": [
          "getGasCostOfGetPopulatedTicksInWord(address,int16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      }
    }
  ]
}